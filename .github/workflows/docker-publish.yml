name: Build & Publish backen-Docker-Image

on: [push]

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}_backend
defaults:
  run:
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (for caching)
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/niilz/old_stars_backend:buildcache
          cache-to: type=registry,ref=ghcr.io/niilz/old_stars_backend:buildcache,mode=max
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Chekckout sources from the top
        uses: actions/checkout@v3
      - name: Deploy docker-compose to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_FFM_HOST }}
          username: ${{ secrets.EC2_FFM_USER }}
          key: ${{ secrets.EC2_FFM_PK }}
          port: ${{ secrets.EC2_FFM_SSH_PORT }}
          source: "docker-compose.yml"
          target: "~/"

      - name: Deploy old-star-package
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_FFM_HOST }}
          username: ${{ secrets.EC2_FFM_USER }}
          key: ${{ secrets.EC2_FFM_PK }}
          port: ${{ secrets.EC2_FFM_SSH_PORT }}
          script: |
            echo Stopping all containers
            docker compose down
            echo
            echo Deleting all docker stuff, which is older than one month
            docker system prune -af --filter until=672h
            echo
            echo Logging into Github-Container-Registry
            echo ${{ secrets.EC2_FFM_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo
            echo Pulling old_stars_backend image
            docker pull ghcr.io/${{ env.IMAGE_NAME }}:main
            echo
            echo Setting evironment-variables
            export PG_USER=${{ secrets.EC2_FFM_PG_USER }}
            export PG_PWD=${{ secrets.EC2_FFM_PG_PWD }}
            export ADMIN_USER=${{ secrets.EC2_FFM_DB_ADMIN_USER }}
            export ADMIN_PWD=${{ secrets.EC2_FFM_DB_ADMIN_PWD }}
            export CLUB_USER=${{ secrets.EC2_FFM_DB_CLUB_USER }}
            export CLUB_PWD=${{ secrets.EC2_FFM_DB_CLUB_PWD }}
            export CERT_CHAIN=${{ secrets.EC2_FFM_CERT_CHAIN_PATH }}
            export PRIVATE_KEY=${{ secrets.EC2_FFM_PRIVATE_KEY_PATH }}
            echo the exported variables are
            env
            echo
            echo Starting docker containers
            docker compose up -d
