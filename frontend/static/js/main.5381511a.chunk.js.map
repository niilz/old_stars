{"version":3,"sources":["components/user/UserView.module.css","components/listItem/ListItem.module.css","components/main/Main.module.css","components/header/Header.module.css","components/register-login-form/RegisterLoginForm.module.css","components/message/Message.module.css","components/admin/AdminConsole.module.css","components/playground/Playground.module.css","components/button/Button.module.css","components/login/Login.module.css","components/logo/Logo.module.css","components/user-list/UserList.module.css","components/modal/Modal.module.css","components/message/Message.tsx","Constants.tsx","services/fetch-service.tsx","services/auth-service.tsx","services/user-service.tsx","components/button/Button.tsx","components/register-login-form/RegisterLoginForm.tsx","components/login/Login.tsx","components/logo/Logo.tsx","components/header/Header.tsx","components/listItem/ListItem.tsx","components/user-list/UserList.tsx","components/admin/AdminConsole.tsx","components/user/UserView.tsx","components/playground/Playground.tsx","components/main/Main.tsx","components/modal/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","MsgType","Message","props","className","styles","type","msg","METHOD","API_URL","baseHeaders","Headers","fetchWrapper","method","endpoint","body","a","options","headers","mode","cache","POST","fetch","apiRes","json","resJson","handleResponse","res","Ok","Err","set","AuthService","user","JSON","stringify","loginResponse","loggedInUser","insertUser","insertResponse","insertedUser","getAllUsers","GET","Button","Btn","onClick","callback","text","RegisterLoginForm","loginType","useState","userName","setUserName","pwd","setPwd","handleRegister","name","newUser","onRegister","onError","ERR","onSubmit","preventFormSubmission","LoginType","User","placeholder","value","onChange","e","target","registerBtn","loginUser","evalLoginName","then","loginState","LoginState","LoggedInUser","Club","LoggedInClub","Admin","LoggedInAdmin","evalLoginState","onLogin","setLoginType","prevLoginType","None","evalLoginType","setSessionUser","catch","preventDefault","Login","message","setMessage","NONE","setType","INFO","LoginError","msgType","LoginForm","AppLogo","Header","showLogo","logo","headerStripes","title","ListItem","itemContent","userData","count","beerCount","shotCount","waterCount","isEditable","delBtn","deleteGotClicked","UserList","users","map","id","onDelete","AdminConsole","DELETE","deleteUser","navToHome","UserView","handleUpdate","drink","updatedUser","onUserUpdate","statsPanel","icons","beer","shots","water","stats","Playground","logout","Main","isAdminView","setAdminView","sessionUser","setLoginState","showBigHeaderAndStar","showPlayground","onLogout","openAdminLogin","Modal","children","App","LoggedOut","Array","setUsers","setLoggedInUser","setOpenAdminLogin","setIsAdminView","useEffect","userResponse","fetchUsers","updatedUsers","filter","undefined","updatedUserList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5381511a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"UserView_User__3rDU-\",\"icons\":\"UserView_icons__11hm8\",\"stats\":\"UserView_stats__3CPgO\",\"beer\":\"UserView_beer__PMuJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContent\":\"ListItem_itemContent__2foXi\",\"userData\":\"ListItem_userData__2hrne\",\"delBtn\":\"ListItem_delBtn__2iPsR\",\"count\":\"ListItem_count__3VfpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1r8OT\",\"headerStripes\":\"Main_headerStripes__GuZIE\",\"title\":\"Main_title__35ppI\",\"logo\":\"Main_logo__27Dhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1Mtf7\",\"logo\":\"Header_logo__3EvUy\",\"headerStripes\":\"Header_headerStripes__3J_X2\",\"title\":\"Header_title__3_fub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterLoginForm\":\"RegisterLoginForm_RegisterLoginForm__O6GgF\",\"registerBtn\":\"RegisterLoginForm_registerBtn__OcyVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2PMfH\",\"error\":\"Message_error__30o9i\",\"info\":\"Message_info__39PgA\",\"none\":\"Message_none__18UBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminConsole\":\"AdminConsole_AdminConsole__18Xtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Playground\":\"Playground_Playground__2Wbtb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__M02Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__1Sl1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppLogo\":\"Logo_AppLogo__ASyqM\",\"starotate\":\"Logo_starotate__3kyPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__Om7ha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__JzWj5\"};","import styles from './Message.module.css';\n\nexport enum MsgType {\n  ERR = 'error',\n  INFO = 'info',\n  NONE = 'none',\n}\n\ninterface MessageProps {\n  msg: string;\n  type: MsgType;\n}\n\nexport function Message(props: MessageProps) {\n  return (\n    <p className={`${styles.Message} ${styles[props.type]}`}>{props.msg}</p>\n  );\n}\n","export const API_URL_DEV = 'http://localhost:8000';\nexport const API_URL = 'https://oldstars.ngrok.io';\nexport enum METHOD {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n}\n","import { API_URL, METHOD } from '../Constants';\n\nconst baseHeaders = new Headers();\nbaseHeaders.set('Accept', 'application/json');\nbaseHeaders.set('Content-Type', 'application/json');\n\ninterface OkRes {\n  Ok: Object;\n  Err?: never;\n}\ninterface ErrRes {\n  Ok?: never;\n  Err: Object;\n}\ntype ApiResponse = OkRes | ErrRes;\n\nexport async function fetchWrapper(\n  method: METHOD,\n  endpoint: String,\n  body: string\n) {\n  const options: RequestInit = {\n    method: method,\n    headers: baseHeaders,\n    mode: 'cors',\n    cache: 'default',\n  };\n  if (method === METHOD.POST) {\n    options.body = body;\n  }\n\n  const apiRes = await fetch(`${API_URL}/${endpoint}`, options);\n  const resJson = await apiRes.json();\n  return resJson;\n}\n\nexport function handleResponse(res: ApiResponse) {\n  const { Ok } = res;\n  const { Err } = res;\n  if (Ok) {\n    const user = Ok;\n    return user;\n  }\n  const errMessage = Err;\n  throw `Ooops... ${errMessage}`;\n}\n","import { METHOD } from '../Constants';\nimport { fetchWrapper, handleResponse } from './fetch-service';\nimport { UserCredentials } from '../model/User';\n\nclass AuthService {\n  static async loginUser(user: UserCredentials) {\n    const loginResponse = await fetchWrapper(\n      METHOD.POST,\n      'login',\n      JSON.stringify(user)\n    );\n\n    const loggedInUser = handleResponse(loginResponse);\n    return loggedInUser;\n  }\n}\n\nexport default AuthService;\n","import { METHOD } from '../Constants';\nimport { UserCredentials } from '../model/User';\nimport { fetchWrapper, handleResponse } from './fetch-service';\n\nexport async function insertUser(user: UserCredentials) {\n  const insertResponse = await fetchWrapper(\n    METHOD.POST,\n    'register',\n    JSON.stringify(user)\n  );\n  const insertedUser = handleResponse(insertResponse);\n  return insertedUser;\n}\n\nexport function deleteUser(id: Number) {\n  return fetchWrapper(METHOD.DELETE, `delete/${id}`, '');\n}\n\nexport async function getAllUsers() {\n  return fetchWrapper(METHOD.GET, 'all', '');\n}\n","import styles from './Button.module.css';\n\ninterface ButtonProps {\n  callback?: () => void;\n  text: string;\n  styles: string;\n}\n\nexport function Button(props: ButtonProps) {\n  return (\n    <button\n      className={`${styles.Btn} ${props.styles}`}\n      onClick={props.callback}\n    >\n      {props.text}\n    </button>\n  );\n}\n","import React, { useState } from 'react';\nimport { User } from '../../model/User';\nimport AuthService from '../../services/auth-service';\nimport { insertUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { LoginState, LoginType } from '../login/Login';\nimport { MsgType } from '../message/Message';\nimport styles from './RegisterLoginForm.module.css';\n\ninterface RegisterLoginFormProps {\n  loginType: LoginType;\n  setLoginType: (loginType: LoginType) => void;\n  onRegister: (user: User) => void;\n  onLogin: (loginGranted: LoginState) => void;\n  setSessionUser?: (user: User) => void;\n  styles?: string;\n  onError: (type: MsgType, msg: string) => void;\n}\n\nexport function RegisterLoginForm(props: RegisterLoginFormProps) {\n  const [userName, setUserName] = useState('');\n  const [pwd, setPwd] = useState('');\n\n  const handleRegister = async () => {\n    try {\n      const newUser = await insertUser({ name: userName, pwd });\n      props.onRegister(newUser as User);\n      setUserName('');\n      setPwd('');\n    } catch (e) {\n      props.onError(MsgType.ERR, e);\n    }\n  };\n\n  const handleLogin = () => {\n    AuthService.loginUser({\n      name: userName || evalLoginName(props.loginType),\n      pwd: pwd,\n    })\n      .then((loggedInUser) => {\n        const loginState = evalLoginState(props.loginType);\n        props.onLogin(loginState);\n        setUserName('');\n        setPwd('');\n        props.setLoginType(evalLoginType(props.loginType));\n        if (props.loginType !== LoginType.User) return;\n        if (!props.setSessionUser)\n          throw 'login- and setSessionUser callback must be defined';\n        props.setSessionUser(loggedInUser as User);\n      })\n      .catch((e) => props.onError(MsgType.ERR, e));\n  };\n  return (\n    <>\n      <form\n        onSubmit={preventFormSubmission}\n        className={`${styles.RegisterLoginForm} ${\n          props.loginType == LoginType.User ? props.styles : ''\n        }`}\n      >\n        {props.loginType === LoginType.User && (\n          <input\n            type=\"text\"\n            placeholder=\"user-name\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        )}\n        <input\n          type=\"password\"\n          value={pwd}\n          placeholder={getPwdPlaceholder(props.loginType)}\n          onChange={(e) => setPwd(e.target.value)}\n        />\n        <Button\n          text=\"Login\"\n          styles={styles.registerBtn}\n          callback={handleLogin}\n        />\n        {props.loginType === LoginType.User && (\n          <Button\n            text=\"Register\"\n            styles={styles.registerBtn}\n            callback={handleRegister}\n          />\n        )}\n      </form>\n    </>\n  );\n}\n\nfunction preventFormSubmission(e: React.FormEvent) {\n  e.preventDefault();\n}\n\nfunction evalLoginState(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.User:\n      return LoginState.LoggedInUser;\n    case LoginType.Club:\n      return LoginState.LoggedInClub;\n    case LoginType.Admin:\n      return LoginState.LoggedInAdmin;\n    default:\n      throw `Unhandled loginTyp: ${loginType}. Cannot evaluate a LoginState`;\n  }\n}\n\nfunction evalLoginName(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.Club:\n      return 'club';\n    case LoginType.Admin:\n      return 'admin';\n    default:\n      throw 'Cannot evaluate the Login Name if the userName is undefined';\n  }\n}\n\nfunction evalLoginType(prevLoginType: LoginType) {\n  switch (prevLoginType) {\n    case LoginType.Club:\n      return LoginType.User;\n    case LoginType.User:\n      return LoginType.None;\n    case LoginType.Admin:\n      return LoginType.None;\n    default:\n      throw 'Unsupported LoginType-State';\n  }\n}\n\nfunction getPwdPlaceholder(loginType: LoginType) {\n  return `${LoginType[loginType]} Password`;\n}\n","import { useState } from 'react';\nimport { User } from '../../model/User';\nimport { Message, MsgType } from '../message/Message';\nimport { RegisterLoginForm } from '../register-login-form/RegisterLoginForm';\nimport styles from './Login.module.css';\n\ntype LoginProps = {\n  loginType: LoginType;\n  setLoginType: (loginType: LoginType) => void;\n  onLogin: (loginState: LoginState) => void;\n  onRegister?: (user: User) => void;\n  setSessionUser?: (user: User) => void;\n};\n\nexport enum LoginState {\n  LoggedInClub,\n  LoggedInAdmin,\n  LoggedInUser,\n  LoggedOut,\n  LoginError,\n}\n\nexport enum LoginType {\n  Club,\n  User,\n  Admin,\n  None,\n}\n\nexport function Login(props: LoginProps) {\n  const [message, setMessage] = useState('');\n  const [type, setType] = useState(MsgType.NONE);\n\n  const handleError = (msgType: MsgType, msg: string) => {\n    setMessage(msg);\n    setType(msgType);\n  };\n\n  const handleLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoginError) {\n      setMessage('');\n      setType(MsgType.NONE);\n    }\n    props.onLogin(loginState);\n  };\n\n  const handleRegister = (user: User) => {\n    if (!props.onRegister)\n      throw 'onRegister must be defined to register a User';\n    setMessage('Registration was successful');\n    setType(MsgType.INFO);\n    props.onRegister(user);\n  };\n\n  return (\n    <>\n      <Message msg={message} type={type} />\n      <RegisterLoginForm\n        {...props}\n        onRegister={handleRegister}\n        onLogin={handleLogin}\n        onError={handleError}\n        styles={styles.LoginForm}\n      />\n    </>\n  );\n}\n","import styles from './Logo.module.css';\n\ninterface LogoProps {\n  styles: string;\n}\nexport function AppLogo(props: LogoProps) {\n  return <div className={`${styles.AppLogo} ${props.styles}`}>⭐</div>;\n}\n","import { AppLogo } from '../logo/Logo';\nimport styles from './Header.module.css';\n\ninterface HeaderProps {\n  showLogo: boolean;\n  styles?: { headerStripes: string; title: string };\n}\n\nexport function Header(props: HeaderProps) {\n  return (\n    <header className={styles.Header}>\n      {props.showLogo ? <AppLogo styles={styles.logo} /> : null}\n      <div\n        className={`${styles.headerStripes} ${\n          props.styles ? props.styles.headerStripes : ''\n        }`}\n      >\n        <h1\n          className={`${styles.title} ${\n            props.styles ? props.styles.title : ''\n          }`}\n        >\n          Old-Stars App\n        </h1>\n      </div>\n    </header>\n  );\n}\n","import { User } from '../../model/User';\nimport styles from './ListItem.module.css';\n\ntype ListItemProps = {\n  id: number;\n  user: User;\n  isEditable: boolean;\n  deleteGotClicked?: () => void;\n};\n\nexport function ListItem(props: ListItemProps) {\n  return (\n    <tr className={styles.itemContent}>\n      <td>\n        <div className={styles.userData}>{props.user.name}</div>\n      </td>\n      <td className={styles.count}>{props.user.beerCount}</td>\n      <td className={styles.count}>{props.user.shotCount}</td>\n      <td className={styles.count}>{props.user.waterCount}</td>\n      {props.isEditable ? (\n        <td>\n          <button className={styles.delBtn} onClick={props.deleteGotClicked}>\n            ❌\n          </button>\n        </td>\n      ) : null}\n    </tr>\n  );\n}\n","import { User } from '../../model/User';\nimport { ListItem } from '../listItem/ListItem';\nimport styles from './UserList.module.css';\n\ntype UserListProps = {\n  users: User[];\n  isEditable: boolean;\n  onDelete?: (id: number) => void;\n};\n\nexport function UserList(props: UserListProps) {\n  return (\n    <table className={styles.UserList}>\n      <thead>\n        <tr>\n          <th></th>\n          <th>🍺</th>\n          <th>🥃</th>\n          <th>🚰</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.users.map((user) => (\n          <ListItem\n            key={user['id']}\n            id={user['id']}\n            user={user}\n            isEditable={props.isEditable}\n            deleteGotClicked={() =>\n              props.onDelete ? props.onDelete(user['id']) : null\n            }\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { useState } from 'react';\nimport { User } from '../../model/User';\nimport { deleteUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { Message, MsgType } from '../message/Message';\nimport { UserList } from '../user-list/UserList';\nimport styles from './AdminConsole.module.css';\n\ninterface AdminConsoleProps {\n  navToHome: () => void;\n  users: User[];\n  onDelete: (id: Number) => void;\n}\n\nexport function AdminConsole(props: AdminConsoleProps) {\n  const [message, setMessage] = useState('');\n  const [type, setType] = useState(MsgType.NONE);\n\n  const handleError = (msgType: MsgType, msg: string) => {\n    setMessage(msg);\n    setType(msgType);\n  };\n\n  const deleteUserFromList = (id: number) => {\n    deleteUser(id);\n    props.onDelete(id);\n  };\n\n  return (\n    <div className={styles.AdminConsole}>\n      <Header showLogo={true} />\n      <UserList\n        users={props.users}\n        isEditable={true}\n        onDelete={deleteUserFromList}\n      />\n      <Message msg={message} type={type} />\n      <Button text=\"Home\" styles={styles.Btn} callback={props.navToHome} />\n    </div>\n  );\n}\n","import { METHOD } from '../../Constants';\nimport { User } from '../../model/User';\nimport { fetchWrapper, handleResponse } from '../../services/fetch-service';\nimport styles from './UserView.module.css';\n\ninterface UserProps {\n  user: User;\n  onUserUpdate: (user: User) => void;\n}\nexport function UserView(props: UserProps) {\n  const handleUpdate = async (drink: string) => {\n    const res = await fetchWrapper(METHOD.GET, `${drink}/${props.user.id}`, '');\n    const updatedUser = handleResponse(res);\n    props.onUserUpdate(updatedUser as User);\n  };\n  return (\n    <div className={styles.User}>\n      <p className={styles.name}>{props.user.name}</p>\n      <div className={styles.statsPanel}>\n        <div className={styles.icons}>\n          <button onClick={() => handleUpdate('beer')} className={styles.beer}>\n            🍺\n          </button>\n          <button onClick={() => handleUpdate('shot')} className={styles.shots}>\n            🥃\n          </button>\n          <button\n            onClick={() => handleUpdate('water')}\n            className={styles.water}\n          >\n            🚰\n          </button>\n        </div>\n        <div className={styles.stats}>\n          <p className={styles.count}>{props.user.beerCount}</p>\n          <p className={styles.count}>{props.user.shotCount}</p>\n          <p className={styles.count}>{props.user.waterCount}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Header } from '../header/Header';\nimport styles from './Playground.module.css';\nimport { User } from '../../model/User';\nimport { UserList } from '../user-list/UserList';\nimport { Button } from '../button/Button';\nimport { UserView } from '../user/UserView';\n\ninterface PlaygroundProps {\n  user: User;\n  logout: () => void;\n  users: User[];\n  onUserUpdate: (user: User) => void;\n}\n\nexport function Playground(props: PlaygroundProps) {\n  return (\n    <div className={styles.Playground}>\n      <Header showLogo={true} />\n      <UserView user={props.user} onUserUpdate={props.onUserUpdate} />\n      <UserList users={props.users} isEditable={false} />\n      <Button text=\"logout\" styles={styles.Btn} callback={props.logout} />\n    </div>\n  );\n}\n","import { User } from '../../model/User';\nimport { AdminConsole } from '../admin/AdminConsole';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { Login, LoginState, LoginType } from '../login/Login';\nimport { AppLogo } from '../logo/Logo';\nimport { Playground } from '../playground/Playground';\nimport styles from './Main.module.css';\n\ninterface MainProps {\n  onLogin: (state: LoginState) => void;\n  loginType: LoginType;\n  setLoginType: (loginType: LoginType) => void;\n  loginState: LoginState;\n  setLoginState: (loginState: LoginState) => void;\n  sessionUser: User | undefined;\n  setSessionUser: (user: User) => void;\n  onRegister: (user: User) => void;\n  users: User[];\n  deleteUser: (id: Number) => void;\n  openAdminLogin: (flag: boolean) => void;\n  isAdminView: boolean;\n  setAdminView: (flag: boolean) => void;\n  onLogout: () => void;\n  onUserUpdate: (user: User) => void;\n}\n\nexport function Main(props: MainProps) {\n  const handleAdminHomeClick = () => {\n    props.setAdminView(false);\n    props.setLoginType(props.sessionUser ? LoginType.None : LoginType.User);\n    props.setLoginState(\n      props.sessionUser ? LoginState.LoggedInUser : LoginState.LoggedInClub\n    );\n  };\n  return (\n    <div className={styles.Main}>\n      {!props.isAdminView ? (\n        <>\n          {showBigHeaderAndStar(props) && (\n            <>\n              <Header\n                showLogo={false}\n                styles={{\n                  headerStripes: styles.headerStripes,\n                  title: styles.title,\n                }}\n              />\n              <AppLogo styles={styles.logo} />\n            </>\n          )}\n          {showPlayground(props) && props.sessionUser ? (\n            <Playground\n              user={props.sessionUser}\n              users={props.users}\n              logout={props.onLogout}\n              onUserUpdate={props.onUserUpdate}\n            />\n          ) : (\n            <Login {...props} />\n          )}\n          {!props.isAdminView && (\n            <Button\n              text=\"admin\"\n              styles={styles.Btn}\n              callback={() => props.openAdminLogin(true)}\n            />\n          )}\n        </>\n      ) : (\n        <AdminConsole\n          navToHome={handleAdminHomeClick}\n          users={props.users}\n          onDelete={props.deleteUser}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction showBigHeaderAndStar(props: MainProps) {\n  return !props.isAdminView && props.loginState !== LoginState.LoggedInUser;\n}\n\nfunction showPlayground(props: MainProps) {\n  return props.loginState === LoginState.LoggedInUser && props.sessionUser;\n}\n","import { ReactChild, ReactChildren } from 'react';\nimport styles from './Modal.module.css';\n\ninterface ModalProps {\n  children: ReactChild;\n}\nexport function Modal(props: ModalProps) {\n  return <div className={styles.Modal}>{props.children}</div>;\n}\n","import { useEffect, useState } from 'react';\nimport { Login, LoginState, LoginType } from './components/login/Login';\nimport { Main } from './components/main/Main';\nimport './global.css';\nimport { User } from './model/User';\nimport { getAllUsers } from './services/user-service';\nimport { handleResponse } from './services/fetch-service';\nimport { Modal } from './components/modal/Modal';\n\nfunction App() {\n  const [loginState, setLoginState] = useState(LoginState.LoggedOut);\n  const [loginType, setLoginType] = useState(LoginType.Club);\n  const [users, setUsers] = useState(new Array<User>());\n  const [loggedInUser, setLoggedInUser] = useState<User | undefined>();\n  const [openAdminLogin, setOpenAdminLogin] = useState(false);\n  const [isAdminView, setIsAdminView] = useState(false);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const userResponse = await getAllUsers();\n      const users = handleResponse(userResponse);\n      setUsers(users as User[]);\n    };\n    fetchUsers();\n  }, []);\n\n  const addUser = (user: User) => {\n    const updatedUsers = [...users, user];\n    setUsers(updatedUsers);\n  };\n  const deleteUser = (id: Number) => {\n    const updatedUsers = users.filter((user) => user['id'] !== id);\n    setUsers(updatedUsers);\n  };\n\n  const handleAdminLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoggedInAdmin)\n      throw 'Only Admin should be able to log in as admin';\n    setLoginState(loginState);\n    setOpenAdminLogin(false);\n    setIsAdminView(true);\n    setLoginType(loginType);\n  };\n\n  const handleLogout = () => {\n    setLoginState(LoginState.LoggedInClub);\n    setLoginType(LoginType.User);\n    setLoggedInUser(undefined);\n    setIsAdminView(false);\n  };\n\n  const handleUpdateUserList = (updatedUser: User) => {\n    const updatedUserList = users.map((user) =>\n      user.id === updatedUser.id ? updatedUser : user\n    );\n    setUsers(updatedUserList);\n    setLoggedInUser(updatedUser);\n  };\n\n  return (\n    <>\n      <Main\n        isAdminView={isAdminView}\n        users={users}\n        sessionUser={loggedInUser}\n        onRegister={addUser}\n        onLogin={setLoginState}\n        loginState={loginState}\n        setLoginState={setLoginState}\n        loginType={loginType}\n        setLoginType={setLoginType}\n        setSessionUser={setLoggedInUser}\n        deleteUser={deleteUser}\n        openAdminLogin={setOpenAdminLogin}\n        setAdminView={setIsAdminView}\n        onLogout={handleLogout}\n        onUserUpdate={handleUpdateUserList}\n      />\n      {openAdminLogin && (\n        <Modal\n          children={\n            <Login\n              loginType={LoginType.Admin}\n              setLoginType={setLoginType}\n              onLogin={handleAdminLogin}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}