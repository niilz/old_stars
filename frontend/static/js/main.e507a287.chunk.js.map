{"version":3,"sources":["components/user/UserView.module.css","components/listItem/ListItem.module.css","components/main/Main.module.css","components/header/Header.module.css","components/register-login-form/RegisterLoginForm.module.css","components/admin/AdminConsole.module.css","components/playground/Playground.module.css","components/message/Message.module.css","components/button/Button.module.css","components/logo/Logo.module.css","components/user-list/UserList.module.css","components/login/Login.module.css","components/modal/Modal.module.css","Constants.tsx","services/fetch-service.tsx","services/user-service.tsx","components/button/Button.tsx","components/logo/Logo.tsx","components/header/Header.tsx","components/listItem/ListItem.tsx","components/user-list/UserList.tsx","components/admin/AdminConsole.tsx","components/user/UserView.tsx","components/playground/Playground.tsx","components/main/Main.tsx","components/message/Message.tsx","services/auth-service.tsx","components/register-login-form/RegisterLoginForm.tsx","components/login/Login.tsx","components/modal/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","METHOD","LoginState","LoginType","API_URL_DEV","baseHeaders","Headers","fetchWrapper","method","endpoint","body","a","options","headers","mode","cache","POST","fetch","apiRes","json","resJson","handleResponse","res","Ok","Err","insertUser","user","JSON","stringify","insertResponse","insertedUser","getAllUsers","GET","set","Button","props","className","styles","Btn","onClick","callback","text","AppLogo","Header","showLogo","logo","headerStripes","title","ListItem","itemContent","userData","name","count","beerCount","shotCount","waterCount","isEditable","delBtn","deleteGotClicked","UserList","users","map","id","onDelete","AdminConsole","DELETE","deleteUser","navToHome","UserView","handleUpdate","drink","updatedUser","onUserUpdate","User","statsPanel","icons","beer","shots","water","stats","Playground","logout","UserContext","React","createContext","addUser","_user","setSessionUser","LoginContext","loginState","LoggedOut","setLoginState","_","Main","useState","Array","setUsers","sessionUser","useContext","AppCtx","setLoginType","isAdminViewOpen","setAdminViewOpen","setAdminLoginOpen","useEffect","userResponse","fetchUsers","isAdminView","ls","Provider","value","None","LoggedInUser","LoggedInClub","updatedUsers","filter","showPlayground","updatedUserList","Login","onLogin","Admin","MsgType","Message","type","msg","AuthService","loginResponse","loggedInUser","doc","document","documentElement","keyboardHeight","Math","floor","window","innerHeight","RegisterLoginForm","loginType","userName","setUserName","pwd","setPwd","handleRegister","newUser","onRegister","onError","ERR","onFocus","e","target","HTMLInputElement","classList","add","scroll","onBlur","remove","onSubmit","preventFormSubmission","placeholder","onChange","getPwdPlaceholder","registerBtn","loginUser","evalLoginName","then","Club","LoggedInAdmin","evalLoginState","prevLoginType","evalLoginType","catch","preventDefault","message","setMessage","NONE","msgType","setMsgType","INFO","LoginError","LoginForm","Modal","children","isAdminLoginOpen","_flag","_lg","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e507a287.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"UserView_User__3rDU-\",\"icons\":\"UserView_icons__11hm8\",\"stats\":\"UserView_stats__3CPgO\",\"beer\":\"UserView_beer__PMuJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContent\":\"ListItem_itemContent__2foXi\",\"userData\":\"ListItem_userData__2hrne\",\"delBtn\":\"ListItem_delBtn__2iPsR\",\"count\":\"ListItem_count__3VfpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1r8OT\",\"headerStripes\":\"Main_headerStripes__GuZIE\",\"title\":\"Main_title__35ppI\",\"logo\":\"Main_logo__27Dhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1Mtf7\",\"logo\":\"Header_logo__3EvUy\",\"headerStripes\":\"Header_headerStripes__3J_X2\",\"title\":\"Header_title__3_fub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterLoginForm\":\"RegisterLoginForm_RegisterLoginForm__O6GgF\",\"registerBtn\":\"RegisterLoginForm_registerBtn__OcyVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminConsole\":\"AdminConsole_AdminConsole__18Xtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Playground\":\"Playground_Playground__2Wbtb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2PMfH\",\"error\":\"Message_error__30o9i\",\"info\":\"Message_info__39PgA\",\"none\":\"Message_none__18UBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__M02Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppLogo\":\"Logo_AppLogo__ASyqM\",\"starotate\":\"Logo_starotate__3kyPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__Om7ha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__1Sl1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__JzWj5\"};","export const API_URL_DEV = 'http://localhost:8000';\nexport const API_URL = 'https://oldstars.ngrok.io';\nexport enum METHOD {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n}\n\nexport enum LoginState {\n  LoggedInClub,\n  LoggedInAdmin,\n  LoggedInUser,\n  LoggedOut,\n  LoginError,\n}\n\nexport enum LoginType {\n  Club,\n  User,\n  Admin,\n  None,\n}\n","import { API_URL, API_URL_DEV, METHOD } from '../Constants';\n\nconst baseHeaders = new Headers();\nbaseHeaders.set('Accept', 'application/json');\nbaseHeaders.set('Content-Type', 'application/json');\n\ninterface OkRes {\n  Ok: Object;\n  Err?: never;\n}\ninterface ErrRes {\n  Ok?: never;\n  Err: Object;\n}\ntype ApiResponse = OkRes | ErrRes;\n\nexport async function fetchWrapper(\n  method: METHOD,\n  endpoint: String,\n  body: string\n) {\n  const options: RequestInit = {\n    method: method,\n    headers: baseHeaders,\n    mode: 'cors',\n    cache: 'default',\n  };\n  if (method === METHOD.POST) {\n    options.body = body;\n  }\n\n  const apiRes = await fetch(`${API_URL_DEV}/${endpoint}`, options);\n  const resJson = await apiRes.json();\n  return resJson;\n}\n\nexport function handleResponse(res: ApiResponse) {\n  const { Ok } = res;\n  const { Err } = res;\n  if (Ok) {\n    const user = Ok;\n    return user;\n  }\n  const errMessage = Err;\n  throw `Ooops... ${errMessage}`;\n}\n","import { METHOD } from '../Constants';\nimport { UserCredentials } from '../model/User';\nimport { fetchWrapper, handleResponse } from './fetch-service';\n\nexport async function insertUser(user: UserCredentials) {\n  const insertResponse = await fetchWrapper(\n    METHOD.POST,\n    'register',\n    JSON.stringify(user)\n  );\n  const insertedUser = handleResponse(insertResponse);\n  return insertedUser;\n}\n\nexport function deleteUser(id: Number) {\n  return fetchWrapper(METHOD.DELETE, `delete/${id}`, '');\n}\n\nexport async function getAllUsers() {\n  return fetchWrapper(METHOD.GET, 'all', '');\n}\n","import styles from './Button.module.css';\n\ninterface ButtonProps {\n  callback?: () => void;\n  text: string;\n  styles: string;\n}\n\nexport function Button(props: ButtonProps) {\n  return (\n    <button\n      className={`${styles.Btn} ${props.styles}`}\n      onClick={props.callback}\n    >\n      {props.text}\n    </button>\n  );\n}\n","import styles from './Logo.module.css';\n\ninterface LogoProps {\n  styles: string;\n}\nexport function AppLogo(props: LogoProps) {\n  return <div className={`${styles.AppLogo} ${props.styles}`}>⭐</div>;\n}\n","import { AppLogo } from '../logo/Logo';\nimport styles from './Header.module.css';\n\ninterface HeaderProps {\n  showLogo: boolean;\n  styles?: { headerStripes: string; title: string };\n}\n\nexport function Header(props: HeaderProps) {\n  return (\n    <header className={styles.Header}>\n      {props.showLogo ? <AppLogo styles={styles.logo} /> : null}\n      <div\n        className={`${styles.headerStripes} ${\n          props.styles ? props.styles.headerStripes : ''\n        }`}\n      >\n        <h1\n          className={`${styles.title} ${\n            props.styles ? props.styles.title : ''\n          }`}\n        >\n          Old-Stars App\n        </h1>\n      </div>\n    </header>\n  );\n}\n","import { User } from '../../model/User';\nimport styles from './ListItem.module.css';\n\ntype ListItemProps = {\n  id: number;\n  user: User;\n  isEditable: boolean;\n  deleteGotClicked?: () => void;\n};\n\nexport function ListItem(props: ListItemProps) {\n  return (\n    <tr className={styles.itemContent}>\n      <td>\n        <div className={styles.userData}>{props.user.name}</div>\n      </td>\n      <td className={styles.count}>{props.user.beerCount}</td>\n      <td className={styles.count}>{props.user.shotCount}</td>\n      <td className={styles.count}>{props.user.waterCount}</td>\n      {props.isEditable ? (\n        <td>\n          <button className={styles.delBtn} onClick={props.deleteGotClicked}>\n            ❌\n          </button>\n        </td>\n      ) : null}\n    </tr>\n  );\n}\n","import { User } from '../../model/User';\nimport { ListItem } from '../listItem/ListItem';\nimport styles from './UserList.module.css';\n\ntype UserListProps = {\n  users: User[];\n  isEditable: boolean;\n  onDelete?: (id: number) => void;\n};\n\nexport function UserList(props: UserListProps) {\n  return (\n    <table className={styles.UserList}>\n      <thead>\n        <tr>\n          <th></th>\n          <th>🍺</th>\n          <th>🥃</th>\n          <th>🚰</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.users.map((user) => (\n          <ListItem\n            key={user['id']}\n            id={user['id']}\n            user={user}\n            isEditable={props.isEditable}\n            deleteGotClicked={() =>\n              props.onDelete ? props.onDelete(user['id']) : null\n            }\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { User } from '../../model/User';\nimport { deleteUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { UserList } from '../user-list/UserList';\nimport styles from './AdminConsole.module.css';\n\ninterface AdminConsoleProps {\n  navToHome: () => void;\n  users: User[];\n  onDelete: (id: Number) => void;\n}\n\nexport function AdminConsole(props: AdminConsoleProps) {\n  const deleteUserFromList = (id: number) => {\n    deleteUser(id);\n    props.onDelete(id);\n  };\n\n  return (\n    <div className={styles.AdminConsole}>\n      <Header showLogo={true} />\n      <UserList\n        users={props.users}\n        isEditable={true}\n        onDelete={deleteUserFromList}\n      />\n      <Button text=\"Home\" styles={styles.Btn} callback={props.navToHome} />\n    </div>\n  );\n}\n","import { METHOD } from '../../Constants';\nimport { User } from '../../model/User';\nimport { fetchWrapper, handleResponse } from '../../services/fetch-service';\nimport styles from './UserView.module.css';\n\ninterface UserProps {\n  user: User;\n  onUserUpdate: (user: User) => void;\n}\nexport function UserView(props: UserProps) {\n  const handleUpdate = async (drink: string) => {\n    const res = await fetchWrapper(METHOD.GET, `${drink}/${props.user.id}`, '');\n    const updatedUser = handleResponse(res);\n    props.onUserUpdate(updatedUser as User);\n  };\n  return (\n    <div className={styles.User}>\n      <p className={styles.name}>{props.user.name}</p>\n      <div className={styles.statsPanel}>\n        <div className={styles.icons}>\n          <button onClick={() => handleUpdate('beer')} className={styles.beer}>\n            🍺\n          </button>\n          <button onClick={() => handleUpdate('shot')} className={styles.shots}>\n            🥃\n          </button>\n          <button\n            onClick={() => handleUpdate('water')}\n            className={styles.water}\n          >\n            🚰\n          </button>\n        </div>\n        <div className={styles.stats}>\n          <p className={styles.count}>{props.user.beerCount}</p>\n          <p className={styles.count}>{props.user.shotCount}</p>\n          <p className={styles.count}>{props.user.waterCount}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Header } from '../header/Header';\nimport styles from './Playground.module.css';\nimport { User } from '../../model/User';\nimport { UserList } from '../user-list/UserList';\nimport { Button } from '../button/Button';\nimport { UserView } from '../user/UserView';\n\ninterface PlaygroundProps {\n  user: User;\n  logout: () => void;\n  users: User[];\n  onUserUpdate: (user: User) => void;\n}\n\nexport function Playground(props: PlaygroundProps) {\n  return (\n    <div className={styles.Playground}>\n      <Header showLogo={true} />\n      <UserView user={props.user} onUserUpdate={props.onUserUpdate} />\n      <UserList users={props.users} isEditable={false} />\n      <Button text=\"logout\" styles={styles.Btn} callback={props.logout} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Login } from '../login/Login';\nimport { useContext, useEffect, useState } from 'react';\nimport { AppCtx } from '../../App';\nimport { User } from '../../model/User';\nimport { handleResponse } from '../../services/fetch-service';\nimport { getAllUsers } from '../../services/user-service';\nimport { AdminConsole } from '../admin/AdminConsole';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { AppLogo } from '../logo/Logo';\nimport { Playground } from '../playground/Playground';\nimport styles from './Main.module.css';\nimport { LoginState, LoginType } from '../../Constants';\n\nexport const UserContext = React.createContext({\n  addUser: (_user: User) => {},\n  setSessionUser: (_user: User) => {},\n});\n\nexport const LoginContext = React.createContext({\n  loginState: LoginState.LoggedOut,\n  setLoginState: (_: LoginState) => {},\n});\n\nexport function Main() {\n  const [users, setUsers] = useState(new Array<User>());\n  const [sessionUser, setSessionUser] = useState<User | null>(null);\n  const [loginState, setLoginState] = useState(LoginState.LoggedOut);\n\n  const {\n    setLoginType,\n    isAdminViewOpen,\n    setAdminViewOpen,\n    setAdminLoginOpen,\n  } = useContext(AppCtx);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const userResponse = await getAllUsers();\n      const users = handleResponse(userResponse);\n      setUsers(users as User[]);\n    };\n    fetchUsers();\n  }, []);\n\n  const addUser = (user: User) => {\n    const updatedUsers = [...users, user];\n    setUsers(updatedUsers);\n  };\n  const deleteUser = (id: Number) => {\n    const updatedUsers = users.filter((user) => user['id'] !== id);\n    setUsers(updatedUsers);\n  };\n\n  const handleLogout = () => {\n    setLoginState(LoginState.LoggedInClub);\n    setLoginType(LoginType.User);\n    setSessionUser(null);\n    setAdminViewOpen(false);\n  };\n\n  const handleUpdateUserList = (updatedUser: User) => {\n    const updatedUserList = users.map((user) =>\n      user.id === updatedUser.id ? updatedUser : user\n    );\n    setUsers(updatedUserList);\n    setSessionUser(updatedUser);\n  };\n\n  const handleOpenAdminLogin = () => {\n    setAdminLoginOpen(true);\n    setLoginType(LoginType.Admin);\n  };\n\n  const handleAdminHomeClick = () => {\n    setAdminViewOpen(false);\n    setLoginType(sessionUser ? LoginType.None : LoginType.User);\n    setLoginState(\n      sessionUser ? LoginState.LoggedInUser : LoginState.LoggedInClub\n    );\n  };\n  return (\n    <LoginContext.Provider value={{ loginState, setLoginState }}>\n      <div className={styles.Main}>\n        {!isAdminViewOpen ? (\n          <>\n            {showBigHeaderAndStar(isAdminViewOpen, loginState) && (\n              <>\n                <Header\n                  showLogo={false}\n                  styles={{\n                    headerStripes: styles.headerStripes,\n                    title: styles.title,\n                  }}\n                />\n                <AppLogo styles={styles.logo} />\n              </>\n            )}\n            <UserContext.Provider value={{ addUser, setSessionUser }}>\n              {sessionUser && showPlayground(loginState, sessionUser) ? (\n                <Playground\n                  user={sessionUser}\n                  users={users}\n                  logout={handleLogout}\n                  onUserUpdate={handleUpdateUserList}\n                />\n              ) : (\n                <Login onLogin={setLoginState} />\n              )}\n            </UserContext.Provider>\n            {!isAdminViewOpen && (\n              <Button\n                text=\"admin\"\n                styles={styles.Btn}\n                callback={handleOpenAdminLogin}\n              />\n            )}\n          </>\n        ) : (\n          <AdminConsole\n            navToHome={handleAdminHomeClick}\n            users={users}\n            onDelete={deleteUser}\n          />\n        )}\n      </div>\n    </LoginContext.Provider>\n  );\n}\n\nfunction showBigHeaderAndStar(isAdminView: boolean, ls: LoginState) {\n  return !isAdminView && ls !== LoginState.LoggedInUser;\n}\n\nfunction showPlayground(ls: LoginState, sessionUser: User) {\n  return ls === LoginState.LoggedInUser && sessionUser;\n}\n","import styles from './Message.module.css';\n\nexport enum MsgType {\n  ERR = 'error',\n  INFO = 'info',\n  NONE = 'none',\n}\n\ninterface MessageProps {\n  msg: string;\n  type: MsgType;\n}\n\nexport function Message(props: MessageProps) {\n  return (\n    <p className={`${styles.Message} ${styles[props.type]}`}>{props.msg}</p>\n  );\n}\n","import { METHOD } from '../Constants';\nimport { fetchWrapper, handleResponse } from './fetch-service';\nimport { UserCredentials } from '../model/User';\n\nclass AuthService {\n  static async loginUser(user: UserCredentials) {\n    const loginResponse = await fetchWrapper(\n      METHOD.POST,\n      'login',\n      JSON.stringify(user)\n    );\n\n    const loggedInUser = handleResponse(loginResponse);\n    return loggedInUser;\n  }\n}\n\nexport default AuthService;\n","import React, { FocusEvent, useContext, useState } from 'react';\nimport { AppCtx } from '../../App';\nimport { LoginState, LoginType } from '../../Constants';\nimport { User } from '../../model/User';\nimport AuthService from '../../services/auth-service';\nimport { insertUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { UserContext } from '../main/Main';\nimport { MsgType } from '../message/Message';\nimport styles from './RegisterLoginForm.module.css';\n\ninterface RegisterLoginFormProps {\n  onRegister: (user: User) => void;\n  onLogin: (loginGranted: LoginState) => void;\n  styles?: string;\n  onError: (type: MsgType, msg: string) => void;\n}\n\nlet doc = document.documentElement;\nconst keyboardHeight = Math.floor(window.innerHeight / 3.5);\n\nexport function RegisterLoginForm(props: RegisterLoginFormProps) {\n  const { loginType, setLoginType } = useContext(AppCtx);\n  const { setSessionUser } = useContext(UserContext);\n\n  const [userName, setUserName] = useState('');\n  const [pwd, setPwd] = useState('');\n\n  const handleRegister = async () => {\n    try {\n      const newUser = await insertUser({ name: userName, pwd });\n      props.onRegister(newUser as User);\n      setUserName('');\n      setPwd('');\n    } catch (e) {\n      props.onError(MsgType.ERR, e);\n    }\n  };\n\n  const handleLogin = () => {\n    AuthService.loginUser({\n      name: userName || evalLoginName(loginType),\n      pwd: pwd,\n    })\n      .then((loggedInUser) => {\n        const loginState = evalLoginState(loginType);\n        props.onLogin(loginState);\n        setUserName('');\n        setPwd('');\n        setLoginType(evalLoginType(loginType));\n        if (loginType !== LoginType.User) return;\n        setSessionUser(loggedInUser as User);\n      })\n      .catch((e) => props.onError(MsgType.ERR, e));\n  };\n\n  const adjustToKeyboardOpen = (e: FocusEvent<HTMLFormElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      if (doc) doc.classList.add('shifted');\n      window.scroll(0, keyboardHeight);\n    }\n  };\n\n  const adjustToKeyboardClose = (e: FocusEvent<HTMLFormElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      if (doc) doc.classList.remove('shifted');\n      window.scroll(0, 0);\n    }\n  };\n\n  return (\n    <>\n      <form\n        onFocus={adjustToKeyboardOpen}\n        onBlur={adjustToKeyboardClose}\n        onSubmit={preventFormSubmission}\n        className={`${styles.RegisterLoginForm} ${\n          loginType === LoginType.User ? props.styles : ''\n        }`}\n      >\n        {loginType === LoginType.User && (\n          <input\n            type=\"text\"\n            placeholder=\"user-name\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        )}\n        <input\n          type=\"password\"\n          value={pwd}\n          placeholder={getPwdPlaceholder(loginType)}\n          onChange={(e) => setPwd(e.target.value)}\n        />\n        <Button\n          text=\"Login\"\n          styles={styles.registerBtn}\n          callback={handleLogin}\n        />\n        {loginType === LoginType.User && (\n          <Button\n            text=\"Register\"\n            styles={styles.registerBtn}\n            callback={handleRegister}\n          />\n        )}\n      </form>\n    </>\n  );\n}\n\nfunction preventFormSubmission(e: React.FormEvent) {\n  e.preventDefault();\n}\n\nfunction evalLoginState(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.User:\n      return LoginState.LoggedInUser;\n    case LoginType.Club:\n      return LoginState.LoggedInClub;\n    case LoginType.Admin:\n      return LoginState.LoggedInAdmin;\n    default:\n      throw `Unhandled loginTyp: ${loginType}. Cannot evaluate a LoginState`;\n  }\n}\n\nfunction evalLoginName(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.Club:\n      return 'club';\n    case LoginType.Admin:\n      return 'admin';\n    default:\n      throw 'Cannot evaluate the Login Name if the userName is undefined';\n  }\n}\n\nfunction evalLoginType(prevLoginType: LoginType) {\n  switch (prevLoginType) {\n    case LoginType.Club:\n      return LoginType.User;\n    case LoginType.User:\n      return LoginType.None;\n    case LoginType.Admin:\n      return LoginType.None;\n    default:\n      throw 'Unsupported LoginType-State';\n  }\n}\n\nfunction getPwdPlaceholder(loginType: LoginType) {\n  return `${LoginType[loginType]} Password`;\n}\n","import { useContext, useState } from 'react';\nimport { LoginState } from '../../Constants';\nimport { User } from '../../model/User';\nimport { UserContext } from '../main/Main';\nimport { Message, MsgType } from '../message/Message';\nimport { RegisterLoginForm } from '../register-login-form/RegisterLoginForm';\nimport styles from './Login.module.css';\n\ntype LoginProps = {\n  onLogin: (ls: LoginState) => void;\n};\n\nexport function Login(props: LoginProps) {\n  const [message, setMessage] = useState('');\n  const [msgType, setMsgType] = useState(MsgType.NONE);\n\n  const { addUser } = useContext(UserContext);\n\n  const handleError = (msgType: MsgType, msg: string) => {\n    setMessage(msg);\n    setMsgType(msgType);\n  };\n\n  const handleLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoginError) {\n      setMessage('');\n      setMsgType(MsgType.NONE);\n    }\n    props.onLogin(loginState);\n  };\n\n  const handleRegister = (user: User) => {\n    setMessage('Registration was successful');\n    setMsgType(MsgType.INFO);\n    addUser(user);\n  };\n\n  return (\n    <>\n      <Message msg={message} type={msgType} />\n      <RegisterLoginForm\n        {...props}\n        onRegister={handleRegister}\n        onLogin={handleLogin}\n        onError={handleError}\n        styles={styles.LoginForm}\n      />\n    </>\n  );\n}\n","import { ReactChild } from 'react';\nimport styles from './Modal.module.css';\n\ninterface ModalProps {\n  children: ReactChild;\n}\nexport function Modal(props: ModalProps) {\n  return <div className={styles.Modal}>{props.children}</div>;\n}\n","import React, { useState } from 'react';\nimport { Login } from './components/login/Login';\nimport { Main } from './components/main/Main';\nimport './global.css';\nimport { Modal } from './components/modal/Modal';\nimport { LoginState, LoginType } from './Constants';\n\nexport const AppCtx = React.createContext({\n  isAdminLoginOpen: false,\n  setAdminLoginOpen: (_flag: boolean) => {},\n  isAdminViewOpen: false,\n  setAdminViewOpen: (_flag: boolean) => {},\n  loginType: LoginType.Club,\n  setLoginType: (_lg: LoginType) => {},\n});\n\nfunction App() {\n  const [isAdminLoginOpen, setAdminLoginOpen] = useState(false);\n  const [isAdminViewOpen, setAdminViewOpen] = useState(false);\n  const [loginType, setLoginType] = useState(LoginType.Club);\n\n  const handleAdminLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoggedInAdmin)\n      throw 'Only Admin should be able to log in as admin';\n    setAdminLoginOpen(false);\n    setAdminViewOpen(true);\n  };\n\n  return (\n    <AppCtx.Provider\n      value={{\n        isAdminLoginOpen,\n        setAdminLoginOpen,\n        isAdminViewOpen,\n        setAdminViewOpen,\n        loginType,\n        setLoginType,\n      }}\n    >\n      <Main />\n      {isAdminLoginOpen && (\n        <Modal children={<Login onLogin={handleAdminLogin} />} />\n      )}\n    </AppCtx.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}