{"version":3,"sources":["components/user/UserView.module.css","components/listItem/ListItem.module.css","components/main/Main.module.css","components/header/Header.module.css","components/playground/Playground.module.css","components/register-login-form/RegisterLoginForm.module.css","components/user-list/UserList.module.css","components/admin/AdminConsole.module.css","components/waterround-warning/WaterRoundWarning.module.css","components/message/Message.module.css","components/button/Button.module.css","components/logo/Logo.module.css","components/modal/Modal.module.css","components/login/Login.module.css","Constants.tsx","services/fetch-service.tsx","services/user-service.tsx","components/button/Button.tsx","components/logo/Logo.tsx","components/header/Header.tsx","components/listItem/ListItem.tsx","components/user-list/UserList.tsx","components/admin/AdminConsole.tsx","model/User.tsx","components/user/UserView.tsx","components/modal/Modal.tsx","components/waterround-warning/WaterRoundWarning.tsx","components/playground/Playground.tsx","components/main/Main.tsx","components/message/Message.tsx","services/auth-service.tsx","components/register-login-form/RegisterLoginForm.tsx","components/login/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","METHOD","LoginState","LoginType","API_URL","SESSION_TOKEN_HEADER_NAME","baseHeaders","Headers","fetchWrapper","method","endpoint","body","token","headers","set","options","mode","cache","credentials","POST","fetch","apiRes","json","resJson","handleResponse","res","Ok","Err","insertUser","user","JSON","stringify","insertResponse","insertedUser","getAllUsers","GET","attachSession","sessionId","removeSession","Button","props","className","styles","Btn","onClick","callback","text","AppLogo","Header","useContext","AppCtx","appHeight","showLogo","logo","headerStripes","title","ListItem","itemContent","userData","name","count","beerCount","shotCount","waterCount","isEditable","delBtn","deleteGotClicked","UserList","TableArea","users","map","id","onDelete","AdminConsole","DELETE","deleteUser","navToHome","OldStar","pwd","this","MAX_ALC_TO_WATER_RATIO","UserView","handleUpdate","drink","updatedUser","onUserUpdate","User","statsPanel","icons","beer","shots","water","stats","Modal","style","height","children","WaterRoundWarning","handleDrinkWater","userId","addWaterResponse","onWaterConsumed","warningWrapper","warning","Playground","oldstar","needsWaterRound","buttons","logout","refresh","onRefresh","UserContext","React","createContext","addUser","_user","setSessionUser","LoginContext","loginState","LoggedOut","setLoginState","_","Main","useState","Array","setUsers","sessionUser","setLoginType","isAdminViewOpen","setAdminViewOpen","setAdminLoginOpen","useEffect","fetchUsers","userResponse","tryAttachSession","attachResponse","LoggedInUser","window","localStorage","getItem","isAdminView","ls","handleLogout","LoggedInClub","handleRefresh","allUsersResponse","allUsers","Provider","value","None","updatedUsers","filter","showPlayground","updatedUserList","Login","onLogin","Admin","MsgType","Message","type","msg","AuthService","loginResponse","sessionData","RegisterLoginForm","loginType","userName","setUserName","setPwd","handleRegister","newUser","onRegister","onError","ERR","onSubmit","preventFormSubmission","placeholder","onChange","e","target","getPwdPlaceholder","registerBtn","loginUser","evalLoginName","then","Club","LoggedInAdmin","evalLoginState","prevLoginType","evalLoginType","sessionDataCasted","setItem","catch","preventDefault","message","setMessage","NONE","msgType","setMsgType","INFO","LoginError","LoginForm","isAdminLoginOpen","_flag","_lg","App","innerHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.831e6b37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"UserView_User__3rDU-\",\"icons\":\"UserView_icons__11hm8\",\"stats\":\"UserView_stats__3CPgO\",\"beer\":\"UserView_beer__PMuJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContent\":\"ListItem_itemContent__2foXi\",\"userData\":\"ListItem_userData__2hrne\",\"delBtn\":\"ListItem_delBtn__2iPsR\",\"count\":\"ListItem_count__3VfpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1r8OT\",\"headerStripes\":\"Main_headerStripes__GuZIE\",\"title\":\"Main_title__35ppI\",\"logo\":\"Main_logo__27Dhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1Mtf7\",\"logo\":\"Header_logo__3EvUy\",\"headerStripes\":\"Header_headerStripes__3J_X2\",\"title\":\"Header_title__3_fub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Playground\":\"Playground_Playground__2Wbtb\",\"buttons\":\"Playground_buttons__uzU7s\",\"refresh\":\"Playground_refresh__B2RZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterLoginForm\":\"RegisterLoginForm_RegisterLoginForm__O6GgF\",\"registerBtn\":\"RegisterLoginForm_registerBtn__OcyVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__Om7ha\",\"TableArea\":\"UserList_TableArea__3Ee2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminConsole\":\"AdminConsole_AdminConsole__18Xtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningWrapper\":\"WaterRoundWarning_warningWrapper__3OR5P\",\"warning\":\"WaterRoundWarning_warning__3bB3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2PMfH\",\"error\":\"Message_error__30o9i\",\"info\":\"Message_info__39PgA\",\"none\":\"Message_none__18UBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__M02Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppLogo\":\"Logo_AppLogo__ASyqM\",\"starotate\":\"Logo_starotate__3kyPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__JzWj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__1Sl1n\"};","export const API_URL_DEV = 'http://localhost:8000';\nexport const API_URL = 'https://niilz.de';\nexport const API_URL_LOCAL_NET = 'https://oldstars-backend.ngrok.io';\nexport const SESSION_TOKEN_HEADER_NAME = 'old-star-user-session';\n\nexport enum METHOD {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n}\n\nexport enum LoginState {\n  LoggedInClub,\n  LoggedInAdmin,\n  LoggedInUser,\n  LoggedOut,\n  LoginError,\n}\n\nexport enum LoginType {\n  Club,\n  User,\n  Admin,\n  None,\n}\n","import {\n  API_URL,\n  API_URL_DEV,\n  API_URL_LOCAL_NET,\n  METHOD,\n  SESSION_TOKEN_HEADER_NAME,\n} from '../Constants';\n\nconst baseHeaders = new Headers();\nbaseHeaders.set('Accept', 'application/json');\nbaseHeaders.set('Content-Type', 'application/json');\n\ninterface OkRes {\n  Ok: Object;\n  Err?: never;\n}\ninterface ErrRes {\n  Ok?: never;\n  Err: Object;\n}\ntype ApiResponse = OkRes | ErrRes;\n\nexport async function fetchWrapper(\n  method: METHOD,\n  endpoint: String,\n  body: string,\n  token?: string\n) {\n  const headers = baseHeaders;\n  if (token) {\n    headers.set(`${SESSION_TOKEN_HEADER_NAME}`, token);\n  }\n\n  const options: RequestInit = {\n    method: method,\n    headers: headers,\n    mode: 'cors',\n    cache: 'default',\n    credentials: 'include',\n  };\n  if (method === METHOD.POST) {\n    options.body = body;\n  }\n\n  const apiRes = await fetch(`${API_URL}/${endpoint}`, options);\n  const resJson = await apiRes.json();\n  return resJson;\n}\n\nexport function handleResponse(res: ApiResponse) {\n  const { Ok } = res;\n  const { Err } = res;\n  if (Ok) {\n    const user = Ok;\n    return user;\n  }\n  const errMessage = Err;\n  throw `Ooops... ${errMessage}`;\n}\n","import { METHOD } from '../Constants';\nimport { UserCredentials } from '../model/User';\nimport { fetchWrapper, handleResponse } from './fetch-service';\n\nexport async function insertUser(user: UserCredentials) {\n  const insertResponse = await fetchWrapper(\n    METHOD.POST,\n    'register',\n    JSON.stringify(user)\n  );\n  const insertedUser = handleResponse(insertResponse);\n  return insertedUser;\n}\n\nexport function deleteUser(id: Number) {\n  return fetchWrapper(METHOD.DELETE, `delete/${id}`, '');\n}\n\nexport async function getAllUsers() {\n  return fetchWrapper(METHOD.GET, 'all', '');\n}\n\nexport async function attachSession(sessionId: string) {\n  return fetchWrapper(METHOD.GET, 'start', '', sessionId);\n}\n\nexport async function removeSession() {\n  return fetchWrapper(METHOD.GET, 'logout', '');\n}\n","import styles from './Button.module.css';\n\ninterface ButtonProps {\n  callback?: () => void;\n  text: string;\n  styles: string;\n}\n\nexport function Button(props: ButtonProps) {\n  return (\n    <button\n      className={`${styles.Btn} ${props.styles}`}\n      onClick={props.callback}\n    >\n      {props.text}\n    </button>\n  );\n}\n","import styles from './Logo.module.css';\n\ninterface LogoProps {\n  styles: string;\n}\nexport function AppLogo(props: LogoProps) {\n  return <div className={`${styles.AppLogo} ${props.styles}`}>⭐</div>;\n}\n","import { useContext } from 'react';\nimport { AppCtx } from '../../App';\nimport { AppLogo } from '../logo/Logo';\nimport styles from './Header.module.css';\n\ninterface HeaderProps {\n  showLogo: boolean;\n  styles?: { headerStripes: string; title: string };\n}\n\nexport function Header(props: HeaderProps) {\n  let { appHeight } = useContext(AppCtx);\n  return (\n    <header className={styles.Header}>\n      {props.showLogo ? <AppLogo styles={styles.logo} /> : null}\n      <div\n        className={`${styles.headerStripes} ${\n          props.styles ? props.styles.headerStripes : ''\n        }`}\n      >\n        <h1\n          className={`${styles.title} ${\n            props.styles ? props.styles.title : ''\n          }`}\n        >\n          Old-Stars App\n        </h1>\n      </div>\n    </header>\n  );\n}\n","import { User } from '../../model/User';\nimport styles from './ListItem.module.css';\n\ntype ListItemProps = {\n  id: number;\n  user: User;\n  isEditable: boolean;\n  deleteGotClicked?: () => void;\n};\n\nexport function ListItem(props: ListItemProps) {\n  return (\n    <tr className={styles.itemContent}>\n      <td>\n        <div className={styles.userData}>{props.user.name}</div>\n      </td>\n      <td className={styles.count}>{props.user.beerCount}</td>\n      <td className={styles.count}>{props.user.shotCount}</td>\n      <td className={styles.count}>{props.user.waterCount}</td>\n      {props.isEditable ? (\n        <td>\n          <button className={styles.delBtn} onClick={props.deleteGotClicked}>\n            ❌\n          </button>\n        </td>\n      ) : null}\n    </tr>\n  );\n}\n","import { User } from '../../model/User';\nimport { ListItem } from '../listItem/ListItem';\nimport styles from './UserList.module.css';\n\ntype UserListProps = {\n  users: User[];\n  isEditable: boolean;\n  onDelete?: (id: number) => void;\n};\n\nexport function UserList(props: UserListProps) {\n  return (\n    <div className={styles.TableArea}>\n      <table className={styles.UserList}>\n        <thead>\n          <tr>\n            <th></th>\n            <th>🍺</th>\n            <th>🥃</th>\n            <th>🚰</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.users.map((user) => (\n            <ListItem\n              key={user['id']}\n              id={user['id']}\n              user={user}\n              isEditable={props.isEditable}\n              deleteGotClicked={() =>\n                props.onDelete ? props.onDelete(user['id']) : null\n              }\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { User } from '../../model/User';\nimport { deleteUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { UserList } from '../user-list/UserList';\nimport styles from './AdminConsole.module.css';\n\ninterface AdminConsoleProps {\n  navToHome: () => void;\n  users: User[];\n  onDelete: (id: Number) => void;\n}\n\nexport function AdminConsole(props: AdminConsoleProps) {\n  const deleteUserFromList = (id: number) => {\n    deleteUser(id);\n    props.onDelete(id);\n  };\n\n  return (\n    <div className={styles.AdminConsole}>\n      <Header showLogo={true} />\n      <UserList\n        users={props.users}\n        isEditable={true}\n        onDelete={deleteUserFromList}\n      />\n      <Button text=\"Home\" styles={styles.Btn} callback={props.navToHome} />\n    </div>\n  );\n}\n","export interface User {\n  id: number;\n  name: string;\n  pwd: string;\n  beerCount: number;\n  shotCount: number;\n  waterCount: number;\n}\n\nexport interface UserCredentials {\n  name: string;\n  pwd: string;\n}\n\nexport interface SessionData {\n  user: User;\n  sessionId: string;\n}\n\nexport class OldStar implements User {\n  id: number;\n  name: string;\n  pwd: string;\n  beerCount: number;\n  shotCount: number;\n  waterCount: number;\n\n  static MAX_ALC_TO_WATER_RATIO = 3;\n\n  constructor(user: User) {\n    this.id = user.id;\n    this.name = user.name;\n    this.pwd = user.pwd;\n    this.beerCount = user.beerCount;\n    this.shotCount = user.shotCount;\n    this.waterCount = user.waterCount;\n  }\n\n  needsWaterRound(): boolean {\n    const consumedAlcohols = this.beerCount + this.shotCount;\n    const waterAlcoholRatio = consumedAlcohols / this.waterCount;\n    return waterAlcoholRatio > OldStar.MAX_ALC_TO_WATER_RATIO;\n  }\n}\n","import { METHOD } from '../../Constants';\nimport { User } from '../../model/User';\nimport { fetchWrapper, handleResponse } from '../../services/fetch-service';\nimport styles from './UserView.module.css';\n\ninterface UserProps {\n  user: User;\n  onUserUpdate: (user: User) => void;\n}\nexport function UserView(props: UserProps) {\n  const handleUpdate = async (drink: string) => {\n    const res = await fetchWrapper(METHOD.GET, `${drink}/${props.user.id}`, '');\n    const updatedUser = handleResponse(res);\n    props.onUserUpdate(updatedUser as User);\n  };\n  return (\n    <div className={styles.User}>\n      <p className={styles.name}>{props.user.name}</p>\n      <div className={styles.statsPanel}>\n        <div className={styles.icons}>\n          <button onClick={() => handleUpdate('beer')} className={styles.beer}>\n            🍺\n          </button>\n          <button onClick={() => handleUpdate('shot')} className={styles.shots}>\n            🥃\n          </button>\n          <button\n            onClick={() => handleUpdate('water')}\n            className={styles.water}\n          >\n            🚰\n          </button>\n        </div>\n        <div className={styles.stats}>\n          <p className={styles.count}>{props.user.beerCount}</p>\n          <p className={styles.count}>{props.user.shotCount}</p>\n          <p className={styles.count}>{props.user.waterCount}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { ReactChild, useContext } from 'react';\nimport { AppCtx } from '../../App';\nimport styles from './Modal.module.css';\n\ninterface ModalProps {\n  children: ReactChild;\n}\nexport function Modal(props: ModalProps) {\n  let { appHeight } = useContext(AppCtx);\n\n  return (\n    <div className={styles.Modal} style={{ height: appHeight }}>\n      {props.children}\n    </div>\n  );\n}\n","import { METHOD } from '../../Constants';\nimport { User } from '../../model/User';\nimport { fetchWrapper, handleResponse } from '../../services/fetch-service';\nimport { Button } from '../button/Button';\nimport styles from './WaterRoundWarning.module.css';\ntype WaterRoundWarningProps = {\n  userId: number;\n  onWaterConsumed: (user: User) => void;\n};\n\nexport function WaterRoundWarning(props: WaterRoundWarningProps) {\n  const handleDrinkWater = async () => {\n    const addWaterResponse = await fetchWrapper(\n      METHOD.GET,\n      `water/${props.userId}`,\n      ''\n    );\n    const updatedUser = handleResponse(addWaterResponse);\n    props.onWaterConsumed(updatedUser as User);\n  };\n  return (\n    <div className={styles.warningWrapper}>\n      <p className={styles.warning}>Du musst eine Wasserrunde trinken</p>\n      <Button text=\"Wasser getrunken\" styles={''} callback={handleDrinkWater} />\n    </div>\n  );\n}\n","import { Header } from '../header/Header';\nimport styles from './Playground.module.css';\nimport { OldStar, User } from '../../model/User';\nimport { UserList } from '../user-list/UserList';\nimport { Button } from '../button/Button';\nimport { UserView } from '../user/UserView';\nimport { Modal } from '../modal/Modal';\nimport { WaterRoundWarning } from '../waterround-warning/WaterRoundWarning';\n\ninterface PlaygroundProps {\n  logout: () => void;\n  user: User;\n  users: User[];\n  onUserUpdate: (user: User) => void;\n  onRefresh: () => void;\n}\n\nexport function Playground(props: PlaygroundProps) {\n  const oldstar = new OldStar(props.user);\n  return (\n    <>\n      {oldstar.needsWaterRound() && (\n        <Modal\n          children={\n            <WaterRoundWarning\n              userId={props.user.id}\n              onWaterConsumed={props.onUserUpdate}\n            />\n          }\n        />\n      )}\n      <div className={styles.Playground}>\n        <Header showLogo={true} />\n        <UserView user={props.user} onUserUpdate={props.onUserUpdate} />\n        <UserList users={props.users} isEditable={false} />\n        <div className={styles.buttons}>\n          <Button text=\"logout\" styles={styles.Btn} callback={props.logout} />\n          <Button\n            text=\"🔄\"\n            styles={styles.refresh}\n            callback={props.onRefresh}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Login } from '../login/Login';\nimport { useContext, useEffect, useState } from 'react';\nimport { AppCtx } from '../../App';\nimport { User } from '../../model/User';\nimport { handleResponse } from '../../services/fetch-service';\nimport {\n  attachSession,\n  getAllUsers,\n  removeSession,\n} from '../../services/user-service';\nimport { AdminConsole } from '../admin/AdminConsole';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { AppLogo } from '../logo/Logo';\nimport { Playground } from '../playground/Playground';\nimport styles from './Main.module.css';\nimport {\n  LoginState,\n  LoginType,\n  SESSION_TOKEN_HEADER_NAME,\n} from '../../Constants';\n\nexport const UserContext = React.createContext({\n  addUser: (_user: User) => {},\n  setSessionUser: (_user: User) => {},\n});\n\nexport const LoginContext = React.createContext({\n  loginState: LoginState.LoggedOut,\n  setLoginState: (_: LoginState) => {},\n});\n\nexport function Main() {\n  const [users, setUsers] = useState(new Array<User>());\n  const [sessionUser, setSessionUser] = useState<User | null>(null);\n  const [loginState, setLoginState] = useState(LoginState.LoggedOut);\n\n  const { setLoginType, isAdminViewOpen, setAdminViewOpen, setAdminLoginOpen } =\n    useContext(AppCtx);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const userResponse = await getAllUsers();\n      const users = handleResponse(userResponse);\n      setUsers(users as User[]);\n    };\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    const tryAttachSession = async (sessionId: string) => {\n      const attachResponse = await attachSession(sessionId);\n      const user = handleResponse(attachResponse);\n      if (user) {\n        setSessionUser(user as User);\n        setLoginState(LoginState.LoggedInUser);\n      }\n    };\n    const sessionId = window.localStorage.getItem(SESSION_TOKEN_HEADER_NAME);\n    if (sessionId) {\n      tryAttachSession(sessionId);\n    }\n  }, []);\n\n  const addUser = (user: User) => {\n    const updatedUsers = [...users, user];\n    setUsers(updatedUsers);\n  };\n  const deleteUser = (id: Number) => {\n    const updatedUsers = users.filter((user) => user['id'] !== id);\n    setUsers(updatedUsers);\n  };\n\n  const handleLogout = async () => {\n    const removeSessionRes = await removeSession();\n    if (removeSessionRes) {\n      setLoginState(LoginState.LoggedInClub);\n      setLoginType(LoginType.User);\n      setSessionUser(null);\n      setAdminViewOpen(false);\n    }\n  };\n\n  const handleUpdateUserList = (updatedUser: User) => {\n    const updatedUserList = users.map((user) =>\n      user.id === updatedUser.id ? updatedUser : user\n    );\n    setUsers(updatedUserList);\n    setSessionUser(updatedUser);\n  };\n\n  const handleRefresh = async () => {\n    const allUsersResponse = await getAllUsers();\n    const allUsers = handleResponse(allUsersResponse);\n    setUsers(allUsers as User[]);\n  };\n\n  const handleOpenAdminLogin = () => {\n    setAdminLoginOpen(true);\n    setLoginType(LoginType.Admin);\n  };\n\n  const handleAdminHomeClick = () => {\n    setAdminViewOpen(false);\n    setLoginType(sessionUser ? LoginType.None : LoginType.User);\n    setLoginState(\n      sessionUser ? LoginState.LoggedInUser : LoginState.LoggedInClub\n    );\n  };\n  return (\n    <LoginContext.Provider value={{ loginState, setLoginState }}>\n      <div className={styles.Main}>\n        {!isAdminViewOpen ? (\n          <>\n            {showBigHeaderAndStar(isAdminViewOpen, loginState) && (\n              <>\n                <Header\n                  showLogo={false}\n                  styles={{\n                    headerStripes: styles.headerStripes,\n                    title: styles.title,\n                  }}\n                />\n                <AppLogo styles={styles.logo} />\n              </>\n            )}\n            <UserContext.Provider value={{ addUser, setSessionUser }}>\n              {sessionUser && showPlayground(loginState, sessionUser) ? (\n                <Playground\n                  user={sessionUser}\n                  users={users}\n                  logout={handleLogout}\n                  onUserUpdate={handleUpdateUserList}\n                  onRefresh={handleRefresh}\n                />\n              ) : (\n                <Login onLogin={setLoginState} />\n              )}\n            </UserContext.Provider>\n            {!isAdminViewOpen && (\n              <Button\n                text=\"admin\"\n                styles={styles.Btn}\n                callback={handleOpenAdminLogin}\n              />\n            )}\n          </>\n        ) : (\n          <AdminConsole\n            navToHome={handleAdminHomeClick}\n            users={users}\n            onDelete={deleteUser}\n          />\n        )}\n      </div>\n    </LoginContext.Provider>\n  );\n}\n\nfunction showBigHeaderAndStar(isAdminView: boolean, ls: LoginState) {\n  return !isAdminView && ls !== LoginState.LoggedInUser;\n}\n\nfunction showPlayground(ls: LoginState, sessionUser: User) {\n  return ls === LoginState.LoggedInUser && sessionUser;\n}\n","import styles from './Message.module.css';\n\nexport enum MsgType {\n  ERR = 'error',\n  INFO = 'info',\n  NONE = 'none',\n}\n\ninterface MessageProps {\n  msg: string;\n  type: MsgType;\n}\n\nexport function Message(props: MessageProps) {\n  return (\n    <p className={`${styles.Message} ${styles[props.type]}`}>{props.msg}</p>\n  );\n}\n","import { METHOD } from '../Constants';\nimport { fetchWrapper, handleResponse } from './fetch-service';\nimport { UserCredentials } from '../model/User';\n\nclass AuthService {\n  static async loginUser(user: UserCredentials) {\n    const loginResponse = await fetchWrapper(\n      METHOD.POST,\n      'login',\n      JSON.stringify(user)\n    );\n\n    const sessionData = handleResponse(loginResponse);\n    return sessionData;\n  }\n}\n\nexport default AuthService;\n","import React, { useContext, useState } from 'react';\nimport { AppCtx } from '../../App';\nimport {\n  LoginState,\n  LoginType,\n  SESSION_TOKEN_HEADER_NAME,\n} from '../../Constants';\nimport { SessionData, User } from '../../model/User';\nimport AuthService from '../../services/auth-service';\nimport { insertUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { UserContext } from '../main/Main';\nimport { MsgType } from '../message/Message';\nimport styles from './RegisterLoginForm.module.css';\n\ninterface RegisterLoginFormProps {\n  onRegister: (user: User) => void;\n  onLogin: (loginGranted: LoginState) => void;\n  styles?: string;\n  onError: (type: MsgType, msg: string) => void;\n}\n\nexport function RegisterLoginForm(props: RegisterLoginFormProps) {\n  const { loginType, setLoginType } = useContext(AppCtx);\n  const { setSessionUser } = useContext(UserContext);\n\n  const [userName, setUserName] = useState('');\n  const [pwd, setPwd] = useState('');\n\n  const handleRegister = async () => {\n    try {\n      const newUser = await insertUser({ name: userName, pwd });\n      props.onRegister(newUser as User);\n      setUserName('');\n      setPwd('');\n    } catch (e) {\n      props.onError(MsgType.ERR, e as string);\n    }\n  };\n\n  const login = () => {\n    AuthService.loginUser({\n      name: userName || evalLoginName(loginType),\n      pwd: pwd,\n    })\n      .then((sessionData) => {\n        const loginState = evalLoginState(loginType);\n        props.onLogin(loginState);\n        setUserName('');\n        setPwd('');\n        setLoginType(evalLoginType(loginType));\n        if (loginType !== LoginType.User) return;\n        const sessionDataCasted = sessionData as SessionData;\n        setSessionUser(sessionDataCasted.user);\n        window.localStorage.setItem(\n          SESSION_TOKEN_HEADER_NAME,\n          sessionDataCasted.sessionId\n        );\n      })\n      .catch((e) => props.onError(MsgType.ERR, e));\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={preventFormSubmission}\n        className={`${styles.RegisterLoginForm} ${\n          loginType === LoginType.User ? props.styles : ''\n        }`}\n      >\n        {loginType === LoginType.User && (\n          <input\n            type=\"text\"\n            placeholder=\"user-name\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        )}\n        <input\n          type=\"password\"\n          value={pwd}\n          placeholder={getPwdPlaceholder(loginType)}\n          onChange={(e) => setPwd(e.target.value)}\n        />\n        <Button text=\"Login\" styles={styles.registerBtn} callback={login} />\n        {loginType === LoginType.User && (\n          <Button\n            text=\"Register\"\n            styles={styles.registerBtn}\n            callback={handleRegister}\n          />\n        )}\n      </form>\n    </>\n  );\n}\n\nfunction preventFormSubmission(e: React.FormEvent) {\n  e.preventDefault();\n}\n\nfunction evalLoginState(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.User:\n      return LoginState.LoggedInUser;\n    case LoginType.Club:\n      return LoginState.LoggedInClub;\n    case LoginType.Admin:\n      return LoginState.LoggedInAdmin;\n    default:\n      throw `Unhandled loginTyp: ${loginType}. Cannot evaluate a LoginState`;\n  }\n}\n\nfunction evalLoginName(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.Club:\n      return 'club';\n    case LoginType.Admin:\n      return 'admin!';\n    default:\n      throw 'Cannot evaluate the Login Name if the userName is undefined';\n  }\n}\n\nfunction evalLoginType(prevLoginType: LoginType) {\n  switch (prevLoginType) {\n    case LoginType.Club:\n      return LoginType.User;\n    case LoginType.User:\n      return LoginType.None;\n    case LoginType.Admin:\n      return LoginType.None;\n    default:\n      throw 'Unsupported LoginType-State';\n  }\n}\n\nfunction getPwdPlaceholder(loginType: LoginType) {\n  return `${LoginType[loginType]} Password`;\n}\n","import { useContext, useState } from 'react';\nimport { LoginState } from '../../Constants';\nimport { User } from '../../model/User';\nimport { UserContext } from '../main/Main';\nimport { Message, MsgType } from '../message/Message';\nimport { RegisterLoginForm } from '../register-login-form/RegisterLoginForm';\nimport styles from './Login.module.css';\n\ntype LoginProps = {\n  onLogin: (ls: LoginState) => void;\n};\n\nexport function Login(props: LoginProps) {\n  const [message, setMessage] = useState('');\n  const [msgType, setMsgType] = useState(MsgType.NONE);\n\n  const { addUser } = useContext(UserContext);\n\n  const handleError = (msgType: MsgType, msg: string) => {\n    setMessage(msg);\n    setMsgType(msgType);\n  };\n\n  const handleLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoginError) {\n      setMessage('');\n      setMsgType(MsgType.NONE);\n    }\n    props.onLogin(loginState);\n  };\n\n  const handleRegister = (user: User) => {\n    setMessage('Registration was successful');\n    setMsgType(MsgType.INFO);\n    addUser(user);\n  };\n\n  return (\n    <>\n      <Message msg={message} type={msgType} />\n      <RegisterLoginForm\n        {...props}\n        onRegister={handleRegister}\n        onLogin={handleLogin}\n        onError={handleError}\n        styles={styles.LoginForm}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Login } from './components/login/Login';\nimport { Main } from './components/main/Main';\nimport './global.css';\nimport { Modal } from './components/modal/Modal';\nimport { LoginState, LoginType } from './Constants';\n\nexport const AppCtx = React.createContext({\n  isAdminLoginOpen: false,\n  setAdminLoginOpen: (_flag: boolean) => {},\n  isAdminViewOpen: false,\n  setAdminViewOpen: (_flag: boolean) => {},\n  loginType: LoginType.Club,\n  setLoginType: (_lg: LoginType) => {},\n  appHeight: 0,\n});\n\nfunction App() {\n  const [isAdminLoginOpen, setAdminLoginOpen] = useState(false);\n  const [isAdminViewOpen, setAdminViewOpen] = useState(false);\n  const [loginType, setLoginType] = useState(LoginType.Club);\n  const [appHeight, _setAppHeight] = useState(window.innerHeight);\n\n  const handleAdminLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoggedInAdmin)\n      throw 'Only Admin should be able to log in as admin';\n    setAdminLoginOpen(false);\n    setAdminViewOpen(true);\n  };\n\n  return (\n    <AppCtx.Provider\n      value={{\n        isAdminLoginOpen,\n        setAdminLoginOpen,\n        isAdminViewOpen,\n        setAdminViewOpen,\n        loginType,\n        setLoginType,\n        appHeight,\n      }}\n    >\n      <div className=\"App\" style={{ height: appHeight }}>\n        <Main />\n        {isAdminLoginOpen && (\n          <Modal children={<Login onLogin={handleAdminLogin} />} />\n        )}\n      </div>\n    </AppCtx.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}