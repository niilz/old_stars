{"version":3,"sources":["components/user/UserView.module.css","components/listItem/ListItem.module.css","components/main/Main.module.css","components/header/Header.module.css","components/playground/Playground.module.css","components/register-login-form/RegisterLoginForm.module.css","components/user-list/UserList.module.css","components/admin/AdminConsole.module.css","components/message/Message.module.css","components/button/Button.module.css","components/logo/Logo.module.css","components/modal/Modal.module.css","components/waterround-warning/WaterRoundWarning.module.css","components/login/Login.module.css","Constants.tsx","services/fetch-service.tsx","services/user-service.tsx","components/button/Button.tsx","components/logo/Logo.tsx","components/header/Header.tsx","components/listItem/ListItem.tsx","components/user-list/UserList.tsx","components/admin/AdminConsole.tsx","model/User.tsx","components/user/UserView.tsx","components/modal/Modal.tsx","components/waterround-warning/WaterRoundWarning.tsx","components/playground/Playground.tsx","components/main/Main.tsx","components/message/Message.tsx","services/auth-service.tsx","components/register-login-form/RegisterLoginForm.tsx","components/login/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","METHOD","LoginState","LoginType","API_URL_DEV","baseHeaders","Headers","fetchWrapper","method","endpoint","body","a","options","headers","mode","cache","POST","fetch","apiRes","json","resJson","handleResponse","res","Ok","Err","insertUser","user","JSON","stringify","insertResponse","insertedUser","getAllUsers","GET","set","Button","props","className","styles","Btn","onClick","callback","text","AppLogo","Header","useContext","AppCtx","appHeight","showLogo","logo","headerStripes","title","ListItem","itemContent","userData","name","count","beerCount","shotCount","waterCount","isEditable","delBtn","deleteGotClicked","UserList","TableArea","users","map","id","onDelete","AdminConsole","DELETE","deleteUser","navToHome","OldStar","pwd","this","MAX_ALC_TO_WATER_RATIO","UserView","handleUpdate","drink","updatedUser","onUserUpdate","User","statsPanel","icons","beer","shots","water","stats","Modal","style","height","children","WaterRoundWarning","handleDrinkWater","userId","addWaterResponse","onWaterConsumed","warning","Playground","oldstar","needsWaterRound","buttons","logout","refresh","onRefresh","UserContext","React","createContext","addUser","_user","setSessionUser","LoginContext","loginState","LoggedOut","setLoginState","_","Main","useState","Array","setUsers","sessionUser","setLoginType","isAdminViewOpen","setAdminViewOpen","setAdminLoginOpen","useEffect","userResponse","fetchUsers","isAdminView","ls","handleRefresh","allUsersResponse","allUsers","Provider","value","None","LoggedInUser","LoggedInClub","updatedUsers","filter","showPlayground","updatedUserList","Login","onLogin","Admin","MsgType","Message","type","msg","AuthService","loginResponse","loggedInUser","RegisterLoginForm","loginType","userName","setUserName","setPwd","handleRegister","newUser","onRegister","onError","ERR","onSubmit","preventFormSubmission","placeholder","onChange","e","target","getPwdPlaceholder","registerBtn","loginUser","evalLoginName","then","Club","LoggedInAdmin","evalLoginState","prevLoginType","evalLoginType","catch","preventDefault","message","setMessage","NONE","msgType","setMsgType","INFO","LoginError","LoginForm","isAdminLoginOpen","_flag","_lg","App","window","innerHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ace7570.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"UserView_User__3rDU-\",\"icons\":\"UserView_icons__11hm8\",\"stats\":\"UserView_stats__3CPgO\",\"beer\":\"UserView_beer__PMuJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContent\":\"ListItem_itemContent__2foXi\",\"userData\":\"ListItem_userData__2hrne\",\"delBtn\":\"ListItem_delBtn__2iPsR\",\"count\":\"ListItem_count__3VfpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1r8OT\",\"headerStripes\":\"Main_headerStripes__GuZIE\",\"title\":\"Main_title__35ppI\",\"logo\":\"Main_logo__27Dhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1Mtf7\",\"logo\":\"Header_logo__3EvUy\",\"headerStripes\":\"Header_headerStripes__3J_X2\",\"title\":\"Header_title__3_fub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Playground\":\"Playground_Playground__2Wbtb\",\"buttons\":\"Playground_buttons__uzU7s\",\"refresh\":\"Playground_refresh__B2RZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterLoginForm\":\"RegisterLoginForm_RegisterLoginForm__O6GgF\",\"registerBtn\":\"RegisterLoginForm_registerBtn__OcyVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__Om7ha\",\"TableArea\":\"UserList_TableArea__3Ee2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminConsole\":\"AdminConsole_AdminConsole__18Xtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2PMfH\",\"error\":\"Message_error__30o9i\",\"info\":\"Message_info__39PgA\",\"none\":\"Message_none__18UBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__M02Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppLogo\":\"Logo_AppLogo__ASyqM\",\"starotate\":\"Logo_starotate__3kyPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__JzWj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"WaterRoundWarning_warning__3bB3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__1Sl1n\"};","export const API_URL_DEV = 'http://localhost:8000';\nexport const API_URL = 'https://niilz.de';\nexport enum METHOD {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n}\n\nexport enum LoginState {\n  LoggedInClub,\n  LoggedInAdmin,\n  LoggedInUser,\n  LoggedOut,\n  LoginError,\n}\n\nexport enum LoginType {\n  Club,\n  User,\n  Admin,\n  None,\n}\n","import { API_URL, API_URL_DEV, METHOD } from '../Constants';\n\nconst baseHeaders = new Headers();\nbaseHeaders.set('Accept', 'application/json');\nbaseHeaders.set('Content-Type', 'application/json');\n\ninterface OkRes {\n  Ok: Object;\n  Err?: never;\n}\ninterface ErrRes {\n  Ok?: never;\n  Err: Object;\n}\ntype ApiResponse = OkRes | ErrRes;\n\nexport async function fetchWrapper(\n  method: METHOD,\n  endpoint: String,\n  body: string\n) {\n  const options: RequestInit = {\n    method: method,\n    headers: baseHeaders,\n    mode: 'cors',\n    cache: 'default',\n  };\n  if (method === METHOD.POST) {\n    options.body = body;\n  }\n\n  const apiRes = await fetch(`${API_URL_DEV}/${endpoint}`, options);\n  const resJson = await apiRes.json();\n  return resJson;\n}\n\nexport function handleResponse(res: ApiResponse) {\n  const { Ok } = res;\n  const { Err } = res;\n  if (Ok) {\n    const user = Ok;\n    return user;\n  }\n  const errMessage = Err;\n  throw `Ooops... ${errMessage}`;\n}\n","import { METHOD } from '../Constants';\nimport { UserCredentials } from '../model/User';\nimport { fetchWrapper, handleResponse } from './fetch-service';\n\nexport async function insertUser(user: UserCredentials) {\n  const insertResponse = await fetchWrapper(\n    METHOD.POST,\n    'register',\n    JSON.stringify(user)\n  );\n  const insertedUser = handleResponse(insertResponse);\n  return insertedUser;\n}\n\nexport function deleteUser(id: Number) {\n  return fetchWrapper(METHOD.DELETE, `delete/${id}`, '');\n}\n\nexport async function getAllUsers() {\n  return fetchWrapper(METHOD.GET, 'all', '');\n}\n","import styles from './Button.module.css';\n\ninterface ButtonProps {\n  callback?: () => void;\n  text: string;\n  styles: string;\n}\n\nexport function Button(props: ButtonProps) {\n  return (\n    <button\n      className={`${styles.Btn} ${props.styles}`}\n      onClick={props.callback}\n    >\n      {props.text}\n    </button>\n  );\n}\n","import styles from './Logo.module.css';\n\ninterface LogoProps {\n  styles: string;\n}\nexport function AppLogo(props: LogoProps) {\n  return <div className={`${styles.AppLogo} ${props.styles}`}>⭐</div>;\n}\n","import { useContext } from 'react';\nimport { AppCtx } from '../../App';\nimport { AppLogo } from '../logo/Logo';\nimport styles from './Header.module.css';\n\ninterface HeaderProps {\n  showLogo: boolean;\n  styles?: { headerStripes: string; title: string };\n}\n\nexport function Header(props: HeaderProps) {\n  let { appHeight } = useContext(AppCtx);\n  return (\n    <header className={styles.Header}>\n      {props.showLogo ? <AppLogo styles={styles.logo} /> : null}\n      <div\n        className={`${styles.headerStripes} ${\n          props.styles ? props.styles.headerStripes : ''\n        }`}\n      >\n        <h1\n          className={`${styles.title} ${\n            props.styles ? props.styles.title : ''\n          }`}\n        >\n          Old-Stars App\n        </h1>\n      </div>\n    </header>\n  );\n}\n","import { User } from '../../model/User';\nimport styles from './ListItem.module.css';\n\ntype ListItemProps = {\n  id: number;\n  user: User;\n  isEditable: boolean;\n  deleteGotClicked?: () => void;\n};\n\nexport function ListItem(props: ListItemProps) {\n  return (\n    <tr className={styles.itemContent}>\n      <td>\n        <div className={styles.userData}>{props.user.name}</div>\n      </td>\n      <td className={styles.count}>{props.user.beerCount}</td>\n      <td className={styles.count}>{props.user.shotCount}</td>\n      <td className={styles.count}>{props.user.waterCount}</td>\n      {props.isEditable ? (\n        <td>\n          <button className={styles.delBtn} onClick={props.deleteGotClicked}>\n            ❌\n          </button>\n        </td>\n      ) : null}\n    </tr>\n  );\n}\n","import { User } from '../../model/User';\nimport { ListItem } from '../listItem/ListItem';\nimport styles from './UserList.module.css';\n\ntype UserListProps = {\n  users: User[];\n  isEditable: boolean;\n  onDelete?: (id: number) => void;\n};\n\nexport function UserList(props: UserListProps) {\n  return (\n    <div className={styles.TableArea}>\n      <table className={styles.UserList}>\n        <thead>\n          <tr>\n            <th></th>\n            <th>🍺</th>\n            <th>🥃</th>\n            <th>🚰</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.users.map((user) => (\n            <ListItem\n              key={user['id']}\n              id={user['id']}\n              user={user}\n              isEditable={props.isEditable}\n              deleteGotClicked={() =>\n                props.onDelete ? props.onDelete(user['id']) : null\n              }\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { User } from '../../model/User';\nimport { deleteUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { UserList } from '../user-list/UserList';\nimport styles from './AdminConsole.module.css';\n\ninterface AdminConsoleProps {\n  navToHome: () => void;\n  users: User[];\n  onDelete: (id: Number) => void;\n}\n\nexport function AdminConsole(props: AdminConsoleProps) {\n  const deleteUserFromList = (id: number) => {\n    deleteUser(id);\n    props.onDelete(id);\n  };\n\n  return (\n    <div className={styles.AdminConsole}>\n      <Header showLogo={true} />\n      <UserList\n        users={props.users}\n        isEditable={true}\n        onDelete={deleteUserFromList}\n      />\n      <Button text=\"Home\" styles={styles.Btn} callback={props.navToHome} />\n    </div>\n  );\n}\n","export interface User {\n  id: number;\n  name: string;\n  pwd: string;\n  beerCount: number;\n  shotCount: number;\n  waterCount: number;\n}\n\nexport interface UserCredentials {\n  name: string;\n  pwd: string;\n}\n\nexport class OldStar implements User {\n  id: number;\n  name: string;\n  pwd: string;\n  beerCount: number;\n  shotCount: number;\n  waterCount: number;\n\n  static MAX_ALC_TO_WATER_RATIO = 3;\n\n  constructor(user: User) {\n    this.id = user.id;\n    this.name = user.name;\n    this.pwd = user.pwd;\n    this.beerCount = user.beerCount;\n    this.shotCount = user.shotCount;\n    this.waterCount = user.waterCount;\n  }\n\n  needsWaterRound(): boolean {\n    const consumedAlcohols = this.beerCount + this.shotCount;\n    const waterAlcoholRatio = consumedAlcohols / this.waterCount;\n    return waterAlcoholRatio > OldStar.MAX_ALC_TO_WATER_RATIO;\n  }\n}\n","import { METHOD } from '../../Constants';\nimport { User } from '../../model/User';\nimport { fetchWrapper, handleResponse } from '../../services/fetch-service';\nimport styles from './UserView.module.css';\n\ninterface UserProps {\n  user: User;\n  onUserUpdate: (user: User) => void;\n}\nexport function UserView(props: UserProps) {\n  const handleUpdate = async (drink: string) => {\n    const res = await fetchWrapper(METHOD.GET, `${drink}/${props.user.id}`, '');\n    const updatedUser = handleResponse(res);\n    props.onUserUpdate(updatedUser as User);\n  };\n  return (\n    <div className={styles.User}>\n      <p className={styles.name}>{props.user.name}</p>\n      <div className={styles.statsPanel}>\n        <div className={styles.icons}>\n          <button onClick={() => handleUpdate('beer')} className={styles.beer}>\n            🍺\n          </button>\n          <button onClick={() => handleUpdate('shot')} className={styles.shots}>\n            🥃\n          </button>\n          <button\n            onClick={() => handleUpdate('water')}\n            className={styles.water}\n          >\n            🚰\n          </button>\n        </div>\n        <div className={styles.stats}>\n          <p className={styles.count}>{props.user.beerCount}</p>\n          <p className={styles.count}>{props.user.shotCount}</p>\n          <p className={styles.count}>{props.user.waterCount}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { ReactChild, useContext } from 'react';\nimport { AppCtx } from '../../App';\nimport styles from './Modal.module.css';\n\ninterface ModalProps {\n  children: ReactChild;\n}\nexport function Modal(props: ModalProps) {\n  let { appHeight } = useContext(AppCtx);\n\n  return (\n    <div className={styles.Modal} style={{ height: appHeight }}>\n      {props.children}\n    </div>\n  );\n}\n","import { METHOD } from '../../Constants';\nimport { User } from '../../model/User';\nimport { fetchWrapper, handleResponse } from '../../services/fetch-service';\nimport { Button } from '../button/Button';\nimport styles from './WaterRoundWarning.module.css';\ntype WaterRoundWarningProps = {\n  userId: number;\n  onWaterConsumed: (user: User) => void;\n};\n\nexport function WaterRoundWarning(props: WaterRoundWarningProps) {\n  const handleDrinkWater = async () => {\n    const addWaterResponse = await fetchWrapper(\n      METHOD.GET,\n      `water/${props.userId}`,\n      ''\n    );\n    const updatedUser = handleResponse(addWaterResponse);\n    props.onWaterConsumed(updatedUser as User);\n  };\n  return (\n    <div>\n      <p className={styles.warning}>Du musst eine Wasserrunde trinken</p>\n      <Button text=\"Wasser getrunken\" styles={''} callback={handleDrinkWater} />\n    </div>\n  );\n}\n","import { Header } from '../header/Header';\nimport styles from './Playground.module.css';\nimport { OldStar, User } from '../../model/User';\nimport { UserList } from '../user-list/UserList';\nimport { Button } from '../button/Button';\nimport { UserView } from '../user/UserView';\nimport { Modal } from '../modal/Modal';\nimport { WaterRoundWarning } from '../waterround-warning/WaterRoundWarning';\n\ninterface PlaygroundProps {\n  logout: () => void;\n  user: User;\n  users: User[];\n  onUserUpdate: (user: User) => void;\n  onRefresh: () => void;\n}\n\nexport function Playground(props: PlaygroundProps) {\n  const oldstar = new OldStar(props.user);\n  return (\n    <>\n      {oldstar.needsWaterRound() && (\n        <Modal\n          children={\n            <WaterRoundWarning\n              userId={props.user.id}\n              onWaterConsumed={props.onUserUpdate}\n            />\n          }\n        />\n      )}\n      <div className={styles.Playground}>\n        <Header showLogo={true} />\n        <UserView user={props.user} onUserUpdate={props.onUserUpdate} />\n        <UserList users={props.users} isEditable={false} />\n        <div className={styles.buttons}>\n          <Button text=\"logout\" styles={styles.Btn} callback={props.logout} />\n          <Button\n            text=\"🔄\"\n            styles={styles.refresh}\n            callback={props.onRefresh}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Login } from '../login/Login';\nimport { useContext, useEffect, useState } from 'react';\nimport { AppCtx } from '../../App';\nimport { User } from '../../model/User';\nimport { handleResponse } from '../../services/fetch-service';\nimport { getAllUsers } from '../../services/user-service';\nimport { AdminConsole } from '../admin/AdminConsole';\nimport { Button } from '../button/Button';\nimport { Header } from '../header/Header';\nimport { AppLogo } from '../logo/Logo';\nimport { Playground } from '../playground/Playground';\nimport styles from './Main.module.css';\nimport { LoginState, LoginType } from '../../Constants';\n\nexport const UserContext = React.createContext({\n  addUser: (_user: User) => {},\n  setSessionUser: (_user: User) => {},\n});\n\nexport const LoginContext = React.createContext({\n  loginState: LoginState.LoggedOut,\n  setLoginState: (_: LoginState) => {},\n});\n\nexport function Main() {\n  const [users, setUsers] = useState(new Array<User>());\n  const [sessionUser, setSessionUser] = useState<User | null>(null);\n  const [loginState, setLoginState] = useState(LoginState.LoggedOut);\n\n  const { setLoginType, isAdminViewOpen, setAdminViewOpen, setAdminLoginOpen } =\n    useContext(AppCtx);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const userResponse = await getAllUsers();\n      const users = handleResponse(userResponse);\n      setUsers(users as User[]);\n    };\n    fetchUsers();\n  }, []);\n\n  const addUser = (user: User) => {\n    const updatedUsers = [...users, user];\n    setUsers(updatedUsers);\n  };\n  const deleteUser = (id: Number) => {\n    const updatedUsers = users.filter((user) => user['id'] !== id);\n    setUsers(updatedUsers);\n  };\n\n  const handleLogout = () => {\n    setLoginState(LoginState.LoggedInClub);\n    setLoginType(LoginType.User);\n    setSessionUser(null);\n    setAdminViewOpen(false);\n  };\n\n  const handleUpdateUserList = (updatedUser: User) => {\n    const updatedUserList = users.map((user) =>\n      user.id === updatedUser.id ? updatedUser : user\n    );\n    setUsers(updatedUserList);\n    setSessionUser(updatedUser);\n  };\n\n  const handleRefresh = async () => {\n    const allUsersResponse = await getAllUsers();\n    const allUsers = handleResponse(allUsersResponse);\n    setUsers(allUsers as User[]);\n  };\n\n  const handleOpenAdminLogin = () => {\n    setAdminLoginOpen(true);\n    setLoginType(LoginType.Admin);\n  };\n\n  const handleAdminHomeClick = () => {\n    setAdminViewOpen(false);\n    setLoginType(sessionUser ? LoginType.None : LoginType.User);\n    setLoginState(\n      sessionUser ? LoginState.LoggedInUser : LoginState.LoggedInClub\n    );\n  };\n  return (\n    <LoginContext.Provider value={{ loginState, setLoginState }}>\n      <div className={styles.Main}>\n        {!isAdminViewOpen ? (\n          <>\n            {showBigHeaderAndStar(isAdminViewOpen, loginState) && (\n              <>\n                <Header\n                  showLogo={false}\n                  styles={{\n                    headerStripes: styles.headerStripes,\n                    title: styles.title,\n                  }}\n                />\n                <AppLogo styles={styles.logo} />\n              </>\n            )}\n            <UserContext.Provider value={{ addUser, setSessionUser }}>\n              {sessionUser && showPlayground(loginState, sessionUser) ? (\n                <Playground\n                  user={sessionUser}\n                  users={users}\n                  logout={handleLogout}\n                  onUserUpdate={handleUpdateUserList}\n                  onRefresh={handleRefresh}\n                />\n              ) : (\n                <Login onLogin={setLoginState} />\n              )}\n            </UserContext.Provider>\n            {!isAdminViewOpen && (\n              <Button\n                text=\"admin\"\n                styles={styles.Btn}\n                callback={handleOpenAdminLogin}\n              />\n            )}\n          </>\n        ) : (\n          <AdminConsole\n            navToHome={handleAdminHomeClick}\n            users={users}\n            onDelete={deleteUser}\n          />\n        )}\n      </div>\n    </LoginContext.Provider>\n  );\n}\n\nfunction showBigHeaderAndStar(isAdminView: boolean, ls: LoginState) {\n  return !isAdminView && ls !== LoginState.LoggedInUser;\n}\n\nfunction showPlayground(ls: LoginState, sessionUser: User) {\n  return ls === LoginState.LoggedInUser && sessionUser;\n}\n","import styles from './Message.module.css';\n\nexport enum MsgType {\n  ERR = 'error',\n  INFO = 'info',\n  NONE = 'none',\n}\n\ninterface MessageProps {\n  msg: string;\n  type: MsgType;\n}\n\nexport function Message(props: MessageProps) {\n  return (\n    <p className={`${styles.Message} ${styles[props.type]}`}>{props.msg}</p>\n  );\n}\n","import { METHOD } from '../Constants';\nimport { fetchWrapper, handleResponse } from './fetch-service';\nimport { UserCredentials } from '../model/User';\n\nclass AuthService {\n  static async loginUser(user: UserCredentials) {\n    const loginResponse = await fetchWrapper(\n      METHOD.POST,\n      'login',\n      JSON.stringify(user)\n    );\n\n    const loggedInUser = handleResponse(loginResponse);\n    return loggedInUser;\n  }\n}\n\nexport default AuthService;\n","import React, { useContext, useState } from 'react';\nimport { AppCtx } from '../../App';\nimport { LoginState, LoginType } from '../../Constants';\nimport { User } from '../../model/User';\nimport AuthService from '../../services/auth-service';\nimport { insertUser } from '../../services/user-service';\nimport { Button } from '../button/Button';\nimport { UserContext } from '../main/Main';\nimport { MsgType } from '../message/Message';\nimport styles from './RegisterLoginForm.module.css';\n\ninterface RegisterLoginFormProps {\n  onRegister: (user: User) => void;\n  onLogin: (loginGranted: LoginState) => void;\n  styles?: string;\n  onError: (type: MsgType, msg: string) => void;\n}\n\nexport function RegisterLoginForm(props: RegisterLoginFormProps) {\n  const { loginType, setLoginType } = useContext(AppCtx);\n  const { setSessionUser } = useContext(UserContext);\n\n  const [userName, setUserName] = useState('');\n  const [pwd, setPwd] = useState('');\n\n  const handleRegister = async () => {\n    try {\n      const newUser = await insertUser({ name: userName, pwd });\n      props.onRegister(newUser as User);\n      setUserName('');\n      setPwd('');\n    } catch (e) {\n      props.onError(MsgType.ERR, e);\n    }\n  };\n\n  const handleLogin = () => {\n    AuthService.loginUser({\n      name: userName || evalLoginName(loginType),\n      pwd: pwd,\n    })\n      .then((loggedInUser) => {\n        const loginState = evalLoginState(loginType);\n        props.onLogin(loginState);\n        setUserName('');\n        setPwd('');\n        setLoginType(evalLoginType(loginType));\n        if (loginType !== LoginType.User) return;\n        setSessionUser(loggedInUser as User);\n      })\n      .catch((e) => props.onError(MsgType.ERR, e));\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={preventFormSubmission}\n        className={`${styles.RegisterLoginForm} ${\n          loginType === LoginType.User ? props.styles : ''\n        }`}\n      >\n        {loginType === LoginType.User && (\n          <input\n            type=\"text\"\n            placeholder=\"user-name\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        )}\n        <input\n          type=\"password\"\n          value={pwd}\n          placeholder={getPwdPlaceholder(loginType)}\n          onChange={(e) => setPwd(e.target.value)}\n        />\n        <Button\n          text=\"Login\"\n          styles={styles.registerBtn}\n          callback={handleLogin}\n        />\n        {loginType === LoginType.User && (\n          <Button\n            text=\"Register\"\n            styles={styles.registerBtn}\n            callback={handleRegister}\n          />\n        )}\n      </form>\n    </>\n  );\n}\n\nfunction preventFormSubmission(e: React.FormEvent) {\n  e.preventDefault();\n}\n\nfunction evalLoginState(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.User:\n      return LoginState.LoggedInUser;\n    case LoginType.Club:\n      return LoginState.LoggedInClub;\n    case LoginType.Admin:\n      return LoginState.LoggedInAdmin;\n    default:\n      throw `Unhandled loginTyp: ${loginType}. Cannot evaluate a LoginState`;\n  }\n}\n\nfunction evalLoginName(loginType: LoginType) {\n  switch (loginType) {\n    case LoginType.Club:\n      return 'club';\n    case LoginType.Admin:\n      return 'admin!';\n    default:\n      throw 'Cannot evaluate the Login Name if the userName is undefined';\n  }\n}\n\nfunction evalLoginType(prevLoginType: LoginType) {\n  switch (prevLoginType) {\n    case LoginType.Club:\n      return LoginType.User;\n    case LoginType.User:\n      return LoginType.None;\n    case LoginType.Admin:\n      return LoginType.None;\n    default:\n      throw 'Unsupported LoginType-State';\n  }\n}\n\nfunction getPwdPlaceholder(loginType: LoginType) {\n  return `${LoginType[loginType]} Password`;\n}\n","import { useContext, useState } from 'react';\nimport { LoginState } from '../../Constants';\nimport { User } from '../../model/User';\nimport { UserContext } from '../main/Main';\nimport { Message, MsgType } from '../message/Message';\nimport { RegisterLoginForm } from '../register-login-form/RegisterLoginForm';\nimport styles from './Login.module.css';\n\ntype LoginProps = {\n  onLogin: (ls: LoginState) => void;\n};\n\nexport function Login(props: LoginProps) {\n  const [message, setMessage] = useState('');\n  const [msgType, setMsgType] = useState(MsgType.NONE);\n\n  const { addUser } = useContext(UserContext);\n\n  const handleError = (msgType: MsgType, msg: string) => {\n    setMessage(msg);\n    setMsgType(msgType);\n  };\n\n  const handleLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoginError) {\n      setMessage('');\n      setMsgType(MsgType.NONE);\n    }\n    props.onLogin(loginState);\n  };\n\n  const handleRegister = (user: User) => {\n    setMessage('Registration was successful');\n    setMsgType(MsgType.INFO);\n    addUser(user);\n  };\n\n  return (\n    <>\n      <Message msg={message} type={msgType} />\n      <RegisterLoginForm\n        {...props}\n        onRegister={handleRegister}\n        onLogin={handleLogin}\n        onError={handleError}\n        styles={styles.LoginForm}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Login } from './components/login/Login';\nimport { Main } from './components/main/Main';\nimport './global.css';\nimport { Modal } from './components/modal/Modal';\nimport { LoginState, LoginType } from './Constants';\n\nexport const AppCtx = React.createContext({\n  isAdminLoginOpen: false,\n  setAdminLoginOpen: (_flag: boolean) => {},\n  isAdminViewOpen: false,\n  setAdminViewOpen: (_flag: boolean) => {},\n  loginType: LoginType.Club,\n  setLoginType: (_lg: LoginType) => {},\n  appHeight: 0,\n});\n\nfunction App() {\n  const [isAdminLoginOpen, setAdminLoginOpen] = useState(false);\n  const [isAdminViewOpen, setAdminViewOpen] = useState(false);\n  const [loginType, setLoginType] = useState(LoginType.Club);\n  const [appHeight, _setAppHeight] = useState(window.innerHeight);\n\n  const handleAdminLogin = (loginState: LoginState) => {\n    if (loginState !== LoginState.LoggedInAdmin)\n      throw 'Only Admin should be able to log in as admin';\n    setAdminLoginOpen(false);\n    setAdminViewOpen(true);\n  };\n\n  return (\n    <AppCtx.Provider\n      value={{\n        isAdminLoginOpen,\n        setAdminLoginOpen,\n        isAdminViewOpen,\n        setAdminViewOpen,\n        loginType,\n        setLoginType,\n        appHeight,\n      }}\n    >\n      <div className=\"App\" style={{ height: appHeight }}>\n        <Main />\n        {isAdminLoginOpen && (\n          <Modal children={<Login onLogin={handleAdminLogin} />} />\n        )}\n      </div>\n    </AppCtx.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}